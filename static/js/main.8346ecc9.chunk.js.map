{"version":3,"sources":["js/Firestore.js","Components/Header.jsx","Components/SD1/DeckDBComponents/FilterHeader.jsx","Components/SD1/js/parsers.js","Components/SD1/DisplayComponents.jsx","Components/SD1/DeckDBComponents/PureDisplayRow.jsx","Components/SD1/DeckDBComponents/SubmitDeckHeader.jsx","Components/SD1/DeckDBComponents/SubmitDeck.jsx","Components/SD1/DeckDBComponents/DeckListDisplay.jsx","Components/SD1/DeckDBComponents/DeckDB.jsx","Components/SD1/js/DeckAssembly.js","Components/SD1/js/ReplayParsers.js","Components/SD1/ReplayDBComponents/ReplayDBDisplay.jsx","Components/SD1/ReplayDBComponents/ReplayDisplay.jsx","Components/SD1/ReplayDBComponents/ReplayDB.jsx","Components/SD1/DeckBuilderComponents/DeckCodeParser.jsx","Components/SD1/DeckBuilderRight/Ammo.jsx","Components/SD1/DeckBuilderRight/TurretHeader.jsx","Components/SD1/DeckBuilderRight/Turret.jsx","Components/SD1/DeckBuilderRight/DetailUnitHeader.jsx","Components/SD1/DeckBuilderRight/UnitModuleSimple.jsx","Components/SD1/DeckBuilderRight/UnitModuleRecon.jsx","Components/SD1/DeckBuilderRight/UnitModuleMobility.jsx","Components/SD1/DeckBuilderRight/UnitModuleSurvivability.jsx","Components/SD1/DeckBuilderRight/UnitModuleAux.jsx","Components/SD1/DeckBuilderRight/UntiModuleAir.jsx","Components/SD1/DeckBuilderRight/UnitModules.jsx","Components/SD1/DeckBuilderRight/RightPanel.jsx","Components/SD1/UnitName.jsx","Components/SD1/DeckBuilderLeft/CardDisplay.jsx","Components/SD1/DeckBuilderLeft/DeckGrid.jsx","Components/SD1/DeckBuilderLeft/UnitListing.jsx","Components/SD1/DeckBuilderLeft/UnitPicker.jsx","Components/SD1/DeckBuilderLeft/DivisionsSelector.jsx","Components/SD1/DeckBuilderLeft/RandomizePanel.jsx","Components/SD1/DeckBuilderLeft/LeftPanel.jsx","Components/SD1/DeckBuilderComponents/DeckBuilder.jsx","Components/SD1/UploadDialog.jsx","Components/SD1/js/API.js","Components/SD1/js/DBAPI.js","Components/SD1/SD1.jsx","Components/SD1/js/RPAPI.js","Components/SD2/SD2.jsx","Components/App.jsx","registerServiceWorker.js","index.js"],"names":["require","config","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","Header","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleChangeName","event","setState","Bug","target","value","handleChangeDesc","Description","state","_this2","button1","button2","button1Click","button2Click","props","Honey","ActiveTab","setActiveTab","react_default","a","createElement","Fragment","className","onClick","User","_this3","bugreport","show","_this4","type","onChange","Firebase","collection","add","desc","user","uid","hide","_this5","renderButtons","align","logIn","logInText","renderBugReportButton","lib_default","hideOnOverlayClicked","ref","title","renderBugReport","Component","FilterHeader","filter","parseToBin","deckCode","deckBinary","i","length","charAt","parseBool","x","parseDescriptor","split","parseAlias","AliasName","ClassNameForDebug","replace","parsePhase","parseArmor","foo","parseTopArmor","indexOf","parseSpeed","AirMaxspeed","Maxspeed","SpeedBonusOnRoad","toFixed","parseTransport","parsePicture","size","VisualsForInterface","toLowerCase","parseRange","max","PorteeMaximale","maxTBA","PorteeMaximaleTBA","maxHA","PorteeMaximaleHA","Math","round","parseAOE","aoe","DisplayAP","_PureComponent","apply","arguments","inherits","createClass","key","AP","css","src","alt","PureComponent","DisplayAV","_PureComponent2","AV","DisplayAmmoProps","_PureComponent3","_getPrototypeOf2","_len","args","Array","_key","concat","showWeapon","Type","includes","Power","Barrage","Salvos","Mags","Accuracy","Range","AOE","Weapons","salves","Ammos","Ammunition","Arme","SalvoStockIndex","NbTirParSalves","NbSalvosShootOnPosition","Power_ForInterface","HitRollRule","Idling","DispersionAtMaxRange","RadiusSplashPhysicalDamages","push","map","DisplayExp","_PureComponent4","Experiencelevel","DisplayPara","_PureComponent5","IsParachutist","DisplaySpecial","_PureComponent6","Spec","PureDisplayRow","showCard","Descriptor","PureDisplayRow_PureDisplay","DB","Parsed","PureDisplay","parsePrice","TransportUnit","Unit","ProductionPrice","parseName","fCount","PackAvailabilty","parseValidity","fValid","y","Number","UnitsPerPack","AvailableFromPhase","DisplayComponents_DisplayExp","DisplayComponents_DisplaySpecial","SpecialtyTexture","DisplayComponents_DisplayAP","APValue","DisplayComponents_DisplayAV","PlatingValue","PureDisplayRow_PureName","PureName","SubmitDeckHeader","getPicture","SelectedDeckObject","Division","API","showDeck","Name","editDeck","deckDetailsDialog","code","SubmitDeck","DeckCode","DeckDBComponents_SubmitDeckHeader","SelectedDeckCode","showEditDialog","DeckDBComponents_PureDisplayRow","DeckUnits","DeckListDisplay","parseAuthor","UID","delete","vote","parseVote","Score","makeUnitEntry","by","DeckList","id","DeckDB","Author","deckDB","renderEditDialog","handleChangeAuth","editHeader","uploadDeck","showDeckDetails","DeckDBComponents_FilterHeader","DeckDBComponents_DeckListDisplay","deleteDeck","DeckDBComponents_SubmitDeck","DeckAssembly","Serializer","DivisionNationalite","PhaseA","PhaseB","PhaseC","PackList","Emblem","Portrait","CostMatrix","Cards","DeckPointsTotal","deck","EncodeInt","EmblemTexture","PortraitTexture","matrix","j","MaxActivationPoints","encodeDeck","bin","parseInt","newdeck","ExportCode","deckInt","index","findIndex","e","console","error","setDeck","sCount","CardsCount","iPC","_loop","_i3","sUnit","sAmount","iAmount","pack","_i2","el","BinaryOut","substring","toString","sort","b","uniqueUnits","currentCount","unit","tally","charArray","match","CharOut","parseFromBin","splice","parseVictoryCond","parseMap","parseTimeLimit","parseIncomeRate","parseGameType","emblem","getEncodeID","ReplayDBDisplay","Players","Decks","Map","GameType","IncomeRate","InitMoney","ScoreLimit","TimeLimit","VictoryCond","Uploaded","toDate","toLocaleDateString","ScoreCount","href","DL","ReplayList","ReplayDisplay","makePlayerEntry","Player","Deck","Replay","ReplayDecks","ReplayDB","upload","ReplayDBComponents_ReplayDBDisplay","showReplay","deleteReplay","ReplayDBComponents_ReplayDisplay","DeckCodeParser","handleChange","setDeckCode","DeckBuilder","Income","parseDeckCode","Ammo","parseLength","r","TypeArme","Caliber","ProjectileType","Puissance","TempsEntreDeuxTirs","TempsEntreDeuxTirs_Min","TempsEntreDeuxTirs_Max","PorteeMinimale","EfficaciteSelonPortee","PhysicalDamages","RadiusSplashSuppressDamages","SuppressDamages","RayonPinned","TirIndirect","TirReflexe","InterdireTirReflexe","NoiseDissimulationMalus","SupplyCost","TargetsDistricts","TempsDeVisee","TempsEntreDeuxSalves","TempsEntreDeuxSalves_Min","TempsEntreDeuxSalves_Max","NbrProjectilesSimultanes","AffichageMunitionParSalve","AffichageMenu","SmokeDescriptor","FireDescriptor","IsHarmlessForAllies","PiercingWeapon","Targeted","SuccessfulShots","Base","Moving","HitModList","TurretHeader","getWeaponPicture","str","parseGunCount","SalvoStockIndex_ForInterface","WeaponNumber_ForInterface","Turret","WeaponList","InterfaceWeaponTexture","DisplayComponents_DisplayAmmoProps","Salves","AmmoDescriptor","TirEnMouvement","DeckBuilderRight_Ammo","DeckBuilderRight_TurretHeader","AimingPriority","AngleRotationBase","AngleRotationMax","AngleRotationBasePitch","AngleRotationMaxPitch","AngleRotationMinPitch","VitesseRotation","DetailUnitHeader","addUnit","fadd","Pack","hideUnit","fhide","DisplayComponents_DisplayPara","UnitModuleSimple","parseOffmapSimple","Turrets","Dogfight","AgilityRadius","WeaponsDescriptor","DamageDescriptor","BlindageProperties","ArmorDescriptorFront","ArmorDescriptorSides","ArmorDescriptorRear","TagSet","MaxDamages","UnitConcealmentBonus","OpticalStrength","NbSeatsAvailable","NbSeatsOccupied","SupplyCapacity","arg","Offmap","UnitModuleRecon","IdentifyBaseProbability","VisionObstructionType","VisionUnitType","TimeBetweenEachIdentifyRoll","UnitModuleRecon_GunNoiseParser","GunNoiseParser","UnitModuleMobility","VitesseCombat","AirVitesseCombat","FuelCapacity","FuelMoveDuration","TempsDemiTour","MaxAcceleration","MaxDeceleration","UnitMovingType","PathfindType","IsTransporter","isTowable","StartTime","StopTime","RotationStartTime","RotationStopTime","UnitModuleSurvivability","DefaultAutoCover","MoralLevel","AlwaysOrientArmorTowardsThreat","StunFreezesUnits","StunDamagesRegen","StunDamagesToGetStunned","MaxSuppressionDamages","TypeForGroundDamageModifier","UnitModuleAux","NbSoldatInGroupeCombat","Behaviour","IsSapery","ProductionYear","ProductionTime","Dangerousness","StrengthDecayPerSecond","PreventsDecayInZone","CircleFormation","InfluenceStrength","MinimumInfluenceStrength","UnitModuleAir","Altitude","AltitudeMin","Speed","PitchAngle","RollAngle","RollSpeed","EvacAngle","PlaneEvacuationTime","UnitModules","parseOffmap","DeckBuilderRight_Turret","esm","DeckBuilderRight_UnitModuleSimple","DeckBuilderRight_UnitModuleRecon","DeckBuilderRight_UnitModuleMobility","DeckBuilderRight_UnitModuleSurvivability","DeckBuilderRight_UnitModuleAux","UntiModuleAir","UnitData","DeckBuilderRight_DetailUnitHeader","UnitModules_UnitModules","DeckBuilderRight_UnitModules","RightPanel","showPack","RightPanel_Pack","fshow","showUnit","UnitsToDisplay","UnitName","CardDisplay","deleteUnit","fdel","drawUnit","SD1_UnitName","CardDisplayRow","CardDisplay_CardDisplay","f","isValid","getUsedCount","DeckGrid","DeckBuilderLeft_CardDisplay","UnitsInList","fsort","Units","UnitPicker","UnitListing","DBUnits","sortBy","fset","DivisionsSelector","makeButton","DivisionsSelector_Division","DivisionTags","RandomizePanel","RandomizerDecks","img","toggleRandomizer","makeDeck","autofill","floor","random","LeftPanel","DeckBuilderLeft_DivisionsSelector","DeckBuilderLeft_DeckGrid","DeckBuilderLeft_UnitPicker","header","DeckBuilderLeft_RandomizePanel","DeckBuilderComponents_DeckCodeParser","DeckBuilderLeft_LeftPanel","DeckBuilderRight_RightPanel","UploadDialog","replayFile","parseReplay","HeaderStart","HeaderEnd","slice","JSON","parse","headerArr","hasOwnProperty","Game","FooterStart","FooterEnd","footer","GameMode","ServerName","gameID","UniqueSessionId","forEach","player","PlayerDeckContent","PlayerName","handleFileSelect","evt","files","reader","FileReader","onload","result","readAsText","handleChangeDescription","IsUploading","parseGameMode","sortByCategoryForDisplay","sortByCategory","units","Factory","SD1","initData","doc","get","then","queryDocumentSnapshot","DeckArray","data","decklist","deckbuilder","FB","isLoading","catch","dataarray","newDeck","newCode","bind","assertThisInitialized","newstr","u","log","newArray","newState","deckb","deckID","decodeDeck","deckListFilter","deckdb","sortby","loadDecks","deckListVote","ID","update","deckListGet","newDeckCode","Side","SelectedDeck","deckListSet","deckListEdit","deckListDelete","deckListUpload","PleaseLogIn","orderBy","querySnapshot","FullDeckList","replayFilter","loadReplays","replayVote","replayGet","Arr","ReplayDeckSet","replayDelete","Storage","child","replayShowUpload","uploadDialog","replayUpload","replay","metadata","filename","replaysRef","docRef","put","snapshot","getDownloadURL","url","ErrorOut","FilterParam","showUpload","DeckBuilderComponents_DeckBuilder","DeckDBComponents_DeckDB","ReplayDBComponents_ReplayDB","SD1_UploadDialog","SD2","app","PleaseLogInShow","loadSD1","loadedDB","loadSD2","provider","auth","GoogleAuthProvider","signInWithPopup","Token","credential","accessToken","LogInButtonText","Error","logOut","signOut","showDBInterface","Components_SD1_SD1","Components_SD2_SD2","db","firestore","fb","storage","logout","Components_Header","isLocalhost","Boolean","window","location","hostname","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","ReactDOM","render","App","document","getElementById","URL","process","origin","addEventListener","fetch","response","status","headers","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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ACzBD,GAAc,SACkB,MAAvBD,EAASI,OAAOF,GACzBD,GAAc,SACkB,MAAvBD,EAASI,OAAOF,GACzBD,GAAc,SACkB,MAAvBD,EAASI,OAAOF,GACzBD,GAAc,SACkB,MAAvBD,EAASI,OAAOF,GACzBD,GAAc,SACkB,MAAvBD,EAASI,OAAOF,GACzBD,GAAc,SACkB,MAAvBD,EAASI,OAAOF,GACzBD,GAAc,SACkB,MAAvBD,EAASI,OAAOF,GACzBD,GAAc,SACkB,MAAvBD,EAASI,OAAOF,GACzBD,GAAc,SACkB,MAAvBD,EAASI,OAAOF,GACzBD,GAAc,SACkB,MAAvBD,EAASI,OAAOF,GACzBD,GAAc,SACkB,MAAvBD,EAASI,OAAOF,GACzBD,GAAc,SACkB,MAAvBD,EAASI,OAAOF,GACzBD,GAAc,SACkB,MAAvBD,EAASI,OAAOF,GACzBD,GAAc,SACkB,MAAvBD,EAASI,OAAOF,GACzBD,GAAc,SACkB,MAAvBD,EAASI,OAAOF,GACzBD,GAAc,SACkB,MAAvBD,EAASI,OAAOF,GACzBD,GAAc,SACkB,MAAvBD,EAASI,OAAOF,GACzBD,GAAc,SACkB,MAAvBD,EAASI,OAAOF,GACzBD,GAAc,SACkB,MAAvBD,EAASI,OAAOF,GACzBD,GAAc,SACkB,MAAvBD,EAASI,OAAOF,GACzBD,GAAc,SACkB,MAAvBD,EAASI,OAAOF,GACzBD,GAAc,SACkB,MAAvBD,EAASI,OAAOF,GACzBD,GAAc,SACkB,MAAvBD,EAASI,OAAOF,GACzBD,GAAc,SACkB,MAAvBD,EAASI,OAAOF,GACzBD,GAAc,SACkB,MAAvBD,EAASI,OAAOF,GACzBD,GAAc,SACkB,MAAvBD,EAASI,OAAOF,GACzBD,GAAc,SACkB,MAAvBD,EAASI,OAAOF,GACzBD,GAAc,SACkB,MAAvBD,EAASI,OAAOF,GACzBD,GAAc,SACkB,MAAvBD,EAASI,OAAOF,GACzBD,GAAc,SACkB,MAAvBD,EAASI,OAAOF,GACzBD,GAAc,SACkB,MAAvBD,EAASI,OAAOF,GACzBD,GAAc,SACkB,MAAvBD,EAASI,OAAOF,GACzBD,GAAc,SACkB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","file":"static/js/main.8346ecc9.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/storage\";\r\nrequire(\"dotenv\").config();\r\n\r\nconst config = {\r\n  //firebase init\r\n  apiKey: \"AIzaSyDVMe_DIELNx4kvMMhF_WWYCLRaK7d42G4\",\r\n  authDomain: \"steeldivisiondb.firebaseapp.com\",\r\n  databaseURL: \"https://steeldivisiondb.firebaseio.com\",\r\n  projectId: \"steeldivisiondb\",\r\n  storageBucket: \"steeldivisiondb.appspot.com\",\r\n  messagingSenderId: \"586133643774\"\r\n};\r\n\r\nfirebase.initializeApp(config);\r\n//const settings = { timestampsInSnapshots: true };\r\n//firebase.firestore().settings(settings);\r\n/*\r\nexport const firestore = firebase.firestore();\r\nexport const database = firebase.storage();\r\nexport const auth = firebase.auth();*/\r\n\r\nexport default firebase;\r\n","import React, { Component } from \"react\";\r\nimport SkyLight from \"react-skylight\";\r\n\r\nclass Header extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      Bug: \"insert title\",\r\n      Description: \"insert description\"\r\n    };\r\n  }\r\n\r\n  renderButtons() {\r\n    let button1 = \"\";\r\n    let button2 = \"\";\r\n    let button1Click = \"\";\r\n    let button2Click = \"\";\r\n\r\n    if (this.props.Honey.ActiveTab === \"DeckBuilder\") {\r\n      button1 = \"Decks\";\r\n      button2 = \"Replays\";\r\n      button1Click = () => this.props.Honey.setActiveTab(\"DeckDB\");\r\n      button2Click = () => this.props.Honey.setActiveTab(\"ReplayDB\");\r\n    } else if (this.props.Honey.ActiveTab === \"DeckDB\") {\r\n      button1 = \"Deck Builder\";\r\n      button2 = \"Replays\";\r\n      button1Click = () => this.props.Honey.setActiveTab(\"DeckBuilder\");\r\n      button2Click = () => this.props.Honey.setActiveTab(\"ReplayDB\");\r\n    } else if (this.props.Honey.ActiveTab === \"ReplayDB\") {\r\n      button1 = \"Deck Builder\";\r\n      button2 = \"Decks\";\r\n      button1Click = () => this.props.Honey.setActiveTab(\"DeckBuilder\");\r\n      button2Click = () => this.props.Honey.setActiveTab(\"DeckDB\");\r\n    } else {\r\n      return <div />;\r\n    }\r\n    return (\r\n      <React.Fragment>\r\n        <button className=\"btn btn-primary btn-block\" onClick={button1Click}>\r\n          {button1}\r\n        </button>\r\n        <button className=\"btn btn-primary btn-block\" onClick={button2Click}>\r\n          {button2}\r\n        </button>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n\r\n  logInText() {\r\n    if (this.props.Honey.User === null) {\r\n      return \"Login\";\r\n    } else {\r\n      return \"Log out\";\r\n    }\r\n  }\r\n\r\n  renderBugReportButton() {\r\n    if (this.props.Honey.User === null) {\r\n      return <div />;\r\n    } else {\r\n      return (\r\n        <button\r\n          className=\"btn btn-primary btn-block\"\r\n          onClick={() => this.bugreport.show()}\r\n        >\r\n          Bug report\r\n        </button>\r\n      );\r\n    }\r\n  }\r\n\r\n  handleChangeName = event => {\r\n    this.setState({\r\n      Bug: event.target.value\r\n    });\r\n  };\r\n  handleChangeDesc = event => {\r\n    this.setState({\r\n      Description: event.target.value\r\n    });\r\n  };\r\n\r\n  renderBugReport() {\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"card\">\r\n          <div className=\"row card-body\">\r\n            <div className=\"col-md-3\">\r\n              <h4>Bug:</h4>\r\n            </div>\r\n            <div className=\"col-md-8\">\r\n              <input\r\n                className=\"form-control\"\r\n                value={this.state.Bug}\r\n                type=\"text\"\r\n                onChange={this.handleChangeName}\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"row card-body\">\r\n            <div className=\"col-md-3\">\r\n              <h4>Description:</h4>\r\n            </div>\r\n            <div className=\"col-md-8\">\r\n              <input\r\n                className=\"form-control\"\r\n                value={this.state.Description}\r\n                type=\"text\"\r\n                onChange={this.handleChangeDesc}\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"row card-footer\">\r\n            <div\r\n              className=\"btn btn-block btn-primary\"\r\n              onClick={() => {\r\n                this.props.Honey.Firebase.collection(\"bugreports\").add({\r\n                  Bug: this.state.Bug,\r\n                  desc: this.state.Description,\r\n                  user: this.props.Honey.User.uid\r\n                });\r\n                this.bugreport.hide();\r\n              }}\r\n            >\r\n              Report\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"row card-header\">\r\n        <div className=\"col-xl-1\">{this.renderButtons()}</div>\r\n        <div className=\"col-xl-10 panel\">\r\n          <h1 align=\"center\">Steel Division Database</h1>\r\n        </div>\r\n        <div className=\"col-xl-1\">\r\n          <button\r\n            className=\"btn btn-default btn-primary btn-block\"\r\n            onClick={this.props.Honey.logIn}\r\n          >\r\n            {this.logInText()}\r\n          </button>\r\n          {this.renderBugReportButton()}\r\n        </div>\r\n        <SkyLight\r\n          hideOnOverlayClicked\r\n          ref={ref => (this.bugreport = ref)}\r\n          title={this.renderBugReport()}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Header;\r\n","import React, { Component } from \"react\";\r\n\r\nclass FilterHeader extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"col-md-12 row card-header\">\r\n        <div className=\"col-md-6\">\r\n          <div\r\n            className=\"btn btn-block btn-primary\"\r\n            onClick={() => this.props.filter(\"new\")}\r\n          >\r\n            Newest\r\n          </div>\r\n        </div>\r\n        <div className=\"col-md-6\">\r\n          <div\r\n            className=\"btn btn-block btn-primary\"\r\n            onClick={() => this.props.filter(\"score\")}\r\n          >\r\n            Most votes\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default FilterHeader;\r\n","export function parseToBin(deckCode) {\r\n  var deckBinary = \"\";\r\n  for (var i = 0; i < deckCode.length; i++) {\r\n    if (deckCode.charAt(i) === \"A\") {\r\n      deckBinary += \"000000\";\r\n    } else if (deckCode.charAt(i) === \"B\") {\r\n      deckBinary += \"000001\";\r\n    } else if (deckCode.charAt(i) === \"C\") {\r\n      deckBinary += \"000010\";\r\n    } else if (deckCode.charAt(i) === \"D\") {\r\n      deckBinary += \"000011\";\r\n    } else if (deckCode.charAt(i) === \"E\") {\r\n      deckBinary += \"000100\";\r\n    } else if (deckCode.charAt(i) === \"F\") {\r\n      deckBinary += \"000101\";\r\n    } else if (deckCode.charAt(i) === \"G\") {\r\n      deckBinary += \"000110\";\r\n    } else if (deckCode.charAt(i) === \"H\") {\r\n      deckBinary += \"000111\";\r\n    } else if (deckCode.charAt(i) === \"I\") {\r\n      deckBinary += \"001000\";\r\n    } else if (deckCode.charAt(i) === \"J\") {\r\n      deckBinary += \"001001\";\r\n    } else if (deckCode.charAt(i) === \"K\") {\r\n      deckBinary += \"001010\";\r\n    } else if (deckCode.charAt(i) === \"L\") {\r\n      deckBinary += \"001011\";\r\n    } else if (deckCode.charAt(i) === \"M\") {\r\n      deckBinary += \"001100\";\r\n    } else if (deckCode.charAt(i) === \"N\") {\r\n      deckBinary += \"001101\";\r\n    } else if (deckCode.charAt(i) === \"O\") {\r\n      deckBinary += \"001110\";\r\n    } else if (deckCode.charAt(i) === \"P\") {\r\n      deckBinary += \"001111\";\r\n    } else if (deckCode.charAt(i) === \"Q\") {\r\n      deckBinary += \"010000\";\r\n    } else if (deckCode.charAt(i) === \"R\") {\r\n      deckBinary += \"010001\";\r\n    } else if (deckCode.charAt(i) === \"S\") {\r\n      deckBinary += \"010010\";\r\n    } else if (deckCode.charAt(i) === \"T\") {\r\n      deckBinary += \"010011\";\r\n    } else if (deckCode.charAt(i) === \"U\") {\r\n      deckBinary += \"010100\";\r\n    } else if (deckCode.charAt(i) === \"V\") {\r\n      deckBinary += \"010101\";\r\n    } else if (deckCode.charAt(i) === \"W\") {\r\n      deckBinary += \"010110\";\r\n    } else if (deckCode.charAt(i) === \"X\") {\r\n      deckBinary += \"010111\";\r\n    } else if (deckCode.charAt(i) === \"Y\") {\r\n      deckBinary += \"011000\";\r\n    } else if (deckCode.charAt(i) === \"Z\") {\r\n      deckBinary += \"011001\";\r\n    } else if (deckCode.charAt(i) === \"a\") {\r\n      deckBinary += \"011010\";\r\n    } else if (deckCode.charAt(i) === \"b\") {\r\n      deckBinary += \"011011\";\r\n    } else if (deckCode.charAt(i) === \"c\") {\r\n      deckBinary += \"011100\";\r\n    } else if (deckCode.charAt(i) === \"d\") {\r\n      deckBinary += \"011101\";\r\n    } else if (deckCode.charAt(i) === \"e\") {\r\n      deckBinary += \"011110\";\r\n    } else if (deckCode.charAt(i) === \"f\") {\r\n      deckBinary += \"011111\";\r\n    } else if (deckCode.charAt(i) === \"g\") {\r\n      deckBinary += \"100000\";\r\n    } else if (deckCode.charAt(i) === \"h\") {\r\n      deckBinary += \"100001\";\r\n    } else if (deckCode.charAt(i) === \"i\") {\r\n      deckBinary += \"100010\";\r\n    } else if (deckCode.charAt(i) === \"j\") {\r\n      deckBinary += \"100011\";\r\n    } else if (deckCode.charAt(i) === \"k\") {\r\n      deckBinary += \"100100\";\r\n    } else if (deckCode.charAt(i) === \"l\") {\r\n      deckBinary += \"100101\";\r\n    } else if (deckCode.charAt(i) === \"m\") {\r\n      deckBinary += \"100110\";\r\n    } else if (deckCode.charAt(i) === \"n\") {\r\n      deckBinary += \"100111\";\r\n    } else if (deckCode.charAt(i) === \"o\") {\r\n      deckBinary += \"101000\";\r\n    } else if (deckCode.charAt(i) === \"p\") {\r\n      deckBinary += \"101001\";\r\n    } else if (deckCode.charAt(i) === \"q\") {\r\n      deckBinary += \"101010\";\r\n    } else if (deckCode.charAt(i) === \"r\") {\r\n      deckBinary += \"101011\";\r\n    } else if (deckCode.charAt(i) === \"s\") {\r\n      deckBinary += \"101100\";\r\n    } else if (deckCode.charAt(i) === \"t\") {\r\n      deckBinary += \"101101\";\r\n    } else if (deckCode.charAt(i) === \"u\") {\r\n      deckBinary += \"101110\";\r\n    } else if (deckCode.charAt(i) === \"v\") {\r\n      deckBinary += \"101111\";\r\n    } else if (deckCode.charAt(i) === \"w\") {\r\n      deckBinary += \"110000\";\r\n    } else if (deckCode.charAt(i) === \"x\") {\r\n      deckBinary += \"110001\";\r\n    } else if (deckCode.charAt(i) === \"y\") {\r\n      deckBinary += \"110010\";\r\n    } else if (deckCode.charAt(i) === \"z\") {\r\n      deckBinary += \"110011\";\r\n    } else if (deckCode.charAt(i) === \"0\") {\r\n      deckBinary += \"110100\";\r\n    } else if (deckCode.charAt(i) === \"1\") {\r\n      deckBinary += \"110101\";\r\n    } else if (deckCode.charAt(i) === \"2\") {\r\n      deckBinary += \"110110\";\r\n    } else if (deckCode.charAt(i) === \"3\") {\r\n      deckBinary += \"110111\";\r\n    } else if (deckCode.charAt(i) === \"4\") {\r\n      deckBinary += \"111000\";\r\n    } else if (deckCode.charAt(i) === \"5\") {\r\n      deckBinary += \"111001\";\r\n    } else if (deckCode.charAt(i) === \"6\") {\r\n      deckBinary += \"111010\";\r\n    } else if (deckCode.charAt(i) === \"7\") {\r\n      deckBinary += \"111011\";\r\n    } else if (deckCode.charAt(i) === \"8\") {\r\n      deckBinary += \"111100\";\r\n    } else if (deckCode.charAt(i) === \"+\") {\r\n      deckBinary += \"111110\";\r\n    } else if (deckCode.charAt(i) === \"9\") {\r\n      deckBinary += \"111101\";\r\n    } else if (deckCode.charAt(i) === \"/\") {\r\n      deckBinary += \"111111\";\r\n    }\r\n  }\r\n  return deckBinary;\r\n}\r\n\r\nexport function parseFromBin(charArray) {\r\n  let pad = \"000000\";\r\n  charArray[charArray.length - 1] =\r\n    charArray[charArray.length - 1] +\r\n    pad.substring(0, pad.length - charArray[charArray.length - 1].length); //pad last to 6\r\n  let CharOut = \"*\";\r\n  for (let i = 0; i < charArray.length; i++) {\r\n    if (charArray[i] === \"000000\") {\r\n      CharOut += \"A\";\r\n    } else if (charArray[i] === \"000001\") {\r\n      CharOut += \"B\";\r\n    } else if (charArray[i] === \"000010\") {\r\n      CharOut += \"C\";\r\n    } else if (charArray[i] === \"000011\") {\r\n      CharOut += \"D\";\r\n    } else if (charArray[i] === \"000100\") {\r\n      CharOut += \"E\";\r\n    } else if (charArray[i] === \"000101\") {\r\n      CharOut += \"F\";\r\n    } else if (charArray[i] === \"000110\") {\r\n      CharOut += \"G\";\r\n    } else if (charArray[i] === \"000111\") {\r\n      CharOut += \"H\";\r\n    } else if (charArray[i] === \"001000\") {\r\n      CharOut += \"I\";\r\n    } else if (charArray[i] === \"001001\") {\r\n      CharOut += \"J\";\r\n    } else if (charArray[i] === \"001010\") {\r\n      CharOut += \"K\";\r\n    } else if (charArray[i] === \"001011\") {\r\n      CharOut += \"L\";\r\n    } else if (charArray[i] === \"001100\") {\r\n      CharOut += \"M\";\r\n    } else if (charArray[i] === \"001101\") {\r\n      CharOut += \"N\";\r\n    } else if (charArray[i] === \"001110\") {\r\n      CharOut += \"O\";\r\n    } else if (charArray[i] === \"001111\") {\r\n      CharOut += \"P\";\r\n    } else if (charArray[i] === \"010000\") {\r\n      CharOut += \"Q\";\r\n    } else if (charArray[i] === \"010001\") {\r\n      CharOut += \"R\";\r\n    } else if (charArray[i] === \"010010\") {\r\n      CharOut += \"S\";\r\n    } else if (charArray[i] === \"010011\") {\r\n      CharOut += \"T\";\r\n    } else if (charArray[i] === \"010100\") {\r\n      CharOut += \"U\";\r\n    } else if (charArray[i] === \"010101\") {\r\n      CharOut += \"V\";\r\n    } else if (charArray[i] === \"010110\") {\r\n      CharOut += \"W\";\r\n    } else if (charArray[i] === \"010111\") {\r\n      CharOut += \"X\";\r\n    } else if (charArray[i] === \"011000\") {\r\n      CharOut += \"Y\";\r\n    } else if (charArray[i] === \"011001\") {\r\n      CharOut += \"Z\";\r\n    } else if (charArray[i] === \"011010\") {\r\n      CharOut += \"a\";\r\n    } else if (charArray[i] === \"011011\") {\r\n      CharOut += \"b\";\r\n    } else if (charArray[i] === \"011100\") {\r\n      CharOut += \"c\";\r\n    } else if (charArray[i] === \"011101\") {\r\n      CharOut += \"d\";\r\n    } else if (charArray[i] === \"011110\") {\r\n      CharOut += \"e\";\r\n    } else if (charArray[i] === \"011111\") {\r\n      CharOut += \"f\";\r\n    } else if (charArray[i] === \"100000\") {\r\n      CharOut += \"g\";\r\n    } else if (charArray[i] === \"100001\") {\r\n      CharOut += \"h\";\r\n    } else if (charArray[i] === \"100010\") {\r\n      CharOut += \"i\";\r\n    } else if (charArray[i] === \"100011\") {\r\n      CharOut += \"j\";\r\n    } else if (charArray[i] === \"100100\") {\r\n      CharOut += \"k\";\r\n    } else if (charArray[i] === \"100101\") {\r\n      CharOut += \"l\";\r\n    } else if (charArray[i] === \"100110\") {\r\n      CharOut += \"m\";\r\n    } else if (charArray[i] === \"100111\") {\r\n      CharOut += \"n\";\r\n    } else if (charArray[i] === \"101000\") {\r\n      CharOut += \"o\";\r\n    } else if (charArray[i] === \"101001\") {\r\n      CharOut += \"p\";\r\n    } else if (charArray[i] === \"101010\") {\r\n      CharOut += \"q\";\r\n    } else if (charArray[i] === \"101011\") {\r\n      CharOut += \"r\";\r\n    } else if (charArray[i] === \"101100\") {\r\n      CharOut += \"s\";\r\n    } else if (charArray[i] === \"101101\") {\r\n      CharOut += \"t\";\r\n    } else if (charArray[i] === \"101110\") {\r\n      CharOut += \"u\";\r\n    } else if (charArray[i] === \"101111\") {\r\n      CharOut += \"v\";\r\n    } else if (charArray[i] === \"110000\") {\r\n      CharOut += \"w\";\r\n    } else if (charArray[i] === \"110001\") {\r\n      CharOut += \"x\";\r\n    } else if (charArray[i] === \"110010\") {\r\n      CharOut += \"y\";\r\n    } else if (charArray[i] === \"110011\") {\r\n      CharOut += \"z\";\r\n    } else if (charArray[i] === \"110100\") {\r\n      CharOut += \"0\";\r\n    } else if (charArray[i] === \"110101\") {\r\n      CharOut += \"1\";\r\n    } else if (charArray[i] === \"110110\") {\r\n      CharOut += \"2\";\r\n    } else if (charArray[i] === \"110111\") {\r\n      CharOut += \"3\";\r\n    } else if (charArray[i] === \"111000\") {\r\n      CharOut += \"4\";\r\n    } else if (charArray[i] === \"111001\") {\r\n      CharOut += \"5\";\r\n    } else if (charArray[i] === \"111010\") {\r\n      CharOut += \"6\";\r\n    } else if (charArray[i] === \"111011\") {\r\n      CharOut += \"7\";\r\n    } else if (charArray[i] === \"111100\") {\r\n      CharOut += \"8\";\r\n    } else if (charArray[i] === \"111110\") {\r\n      CharOut += \"+\";\r\n    } else if (charArray[i] === \"111101\") {\r\n      CharOut += \"9\";\r\n    } else if (charArray[i] === \"111111\") {\r\n      CharOut += \"/\";\r\n    }\r\n  }\r\n  //parser throws out decks with no padding.\r\n  if (CharOut.length % 4 === 0) {\r\n    CharOut += \"A\";\r\n  } else if (CharOut.length % 4 === 1) {\r\n    CharOut += \"\";\r\n  } else if (CharOut.length % 4 === 2) {\r\n    CharOut += \"A==\";\r\n  } else if (CharOut.length % 4 === 3) {\r\n    CharOut += \"A=\";\r\n  }\r\n  return CharOut;\r\n}\r\nexport function parseBool(x) {\r\n  if (x) {\r\n    return \"True\";\r\n  }\r\n  return \"False\";\r\n}\r\n\r\nexport function parseDescriptor(x) {\r\n  return x.split(\"/\")[1];\r\n}\r\nexport function parseAlias(x) {\r\n  if (x.AliasName === null) {\r\n    return x.ClassNameForDebug.replace(\"Unit_\", \"\");\r\n  } else return x.AliasName.replace(\"(!TUTO!)\", \"\");\r\n}\r\nexport function parsePhase(x) {\r\n  if (x === 0) {\r\n    return \"A\";\r\n  } else if (x === 1) {\r\n    return \"B\";\r\n  } else if (x === 2) {\r\n    return \"C\";\r\n  }\r\n}\r\nexport function parseArmor(x) {\r\n  var foo = x;\r\n  foo = foo.replace(\"ArmorDescriptor_\", \"\");\r\n  foo = foo.replace(\"Lourd\", \"\");\r\n  /*should mean \"heavy\"\r\n  but only non-lourd units are open top vehs\r\n  and deprecated or non-instanced infantry*/\r\n  foo = foo.replace(\"_\", \" \");\r\n  foo = foo.replace(\"Blindage\", \"AV\");\r\n  foo = foo.replace(\"Infanterie\", \"Infantry\");\r\n  foo = foo.replace(\"Canon\", \"Gun\");\r\n  foo = foo.replace(\"Avion\", \"Aircraft\");\r\n  return foo;\r\n}\r\nexport function parseTopArmor(x) {\r\n  if (x.indexOf(\"Vehicule_OpenTop\") === -1) {\r\n    return \"Closed\";\r\n  } else {\r\n    return \"Open\";\r\n  }\r\n}\r\nexport function parseSpeed(x) {\r\n  if (x.AirMaxspeed === null) {\r\n    var foo = x.Maxspeed.replace(\"(\", \"\");\r\n    return foo + \"/\" + (foo * x.SpeedBonusOnRoad).toFixed(0);\r\n  }\r\n}\r\nexport function parseTransport(x) {\r\n  if (x === 0) {\r\n    return \"none\";\r\n  } else if (x === 2) {\r\n    return \"Light\";\r\n  } else if (x === 3) {\r\n    return \"Heavy\";\r\n  } else if (x === 3) {\r\n    return \"Not towable\";\r\n  } else {\r\n    return \"N/A\";\r\n  }\r\n}\r\n\r\nexport function parsePicture(x, size) {\r\n  let img;\r\n  if (size === \"sm\") {\r\n    img = \"img/u-sm/\" + x.VisualsForInterface.toLowerCase() + \".tgv.png\";\r\n  } else if (size === \"md\") {\r\n    img = \"img/u-md/\" + x.VisualsForInterface.toLowerCase() + \".tgv.png\";\r\n  } else {\r\n    img = \"img/u/\" + x.VisualsForInterface.toLowerCase() + \".tgv.png\";\r\n  }\r\n  return img;\r\n}\r\n\r\nexport function parseRange(x) {\r\n  let max = x.PorteeMaximale.replace(\") * Metre)\", \"\").replace(\"((\", \"\");\r\n  let maxTBA = x.PorteeMaximaleTBA.replace(\") * Metre)\", \"\").replace(\"((\", \"\");\r\n  let maxHA = x.PorteeMaximaleHA.replace(\") * Metre)\", \"\").replace(\"((\", \"\");\r\n  max = max > maxHA ? max : maxHA > maxTBA ? maxHA : maxTBA;\r\n  return Math.round(max / 5) + \"m\";\r\n}\r\n\r\nexport function parseAOE(x) {\r\n  let aoe = x.replace(\"((\", \"\");\r\n  return \"AOE:\" + Math.round(aoe.replace(\") * Metre)\", \"\") / 5) + \"m\";\r\n}\r\n","import React, { PureComponent } from \"react\";\r\nimport { parseRange, parseAOE } from \"./js/parsers\";\r\n\r\nexport class DisplayAP extends PureComponent {\r\n  render() {\r\n    let AP = this.props.AP;\r\n    let css = this.props.css;\r\n    if (AP === \"True\") {\r\n      return (\r\n        <img src=\"img/icone_fantassin.tgv.png\" className={css} alt=\"bazooka\" />\r\n      );\r\n    } else if (AP === \"False\") {\r\n      return <img src=\"img/icone_ap.tgv.png\" className={css} alt=\"none\" />;\r\n    } else {\r\n      if (css === \"img-xp\") {\r\n        return <h6>AP: {AP}</h6>;\r\n      } else {\r\n        return <h5 className=\"txt-rel-ap\">{AP}</h5>;\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nexport class DisplayAV extends PureComponent {\r\n  render() {\r\n    let AV = this.props.AV;\r\n    let css = this.props.css;\r\n    if (AV === 0) {\r\n      return <img src=\"img/icone_ap.tgv.png\" className={css} alt=\"none\" />;\r\n    } else {\r\n      if (css === \"img-xp\") {\r\n        return <h6>FAV: {AV}</h6>;\r\n      } else {\r\n        return <h5 className=\"txt-rel-av\">{AV}</h5>;\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nexport class DisplayAmmoProps extends PureComponent {\r\n  showWeapon = (x, i) => {\r\n    if (x.Type.includes(\"AP\")) {\r\n      x.Power = x.Type.replace(\"AP_\", \"\");\r\n      x.Type = \"AP\";\r\n    }\r\n    if (x.Barrage !== 0 && x.Salvos === 1) {\r\n      x.Salvos = x.Barrage;\r\n    } //barrage for normal artillery, burst for normal units and MRLS\r\n    return (\r\n      <div className=\"col-xl\" key={i}>\r\n        <h6>\r\n          {x.Type}: {x.Mags} loads of {x.Salvos}\r\n        </h6>\r\n        <h6>\r\n          Power:\r\n          {x.Power}\r\n        </h6>\r\n        <h6>\r\n          Accuracy:\r\n          {x.Accuracy}\r\n        </h6>\r\n        <h6>\r\n          Range:\r\n          {x.Range}\r\n        </h6>\r\n        <h6>{x.AOE}</h6>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  render() {\r\n    let x = this.props.Weapons;\r\n    let salves = this.props.salves;\r\n    let Ammos = [];\r\n\r\n    for (let i = 0; i < x.length; i++) {\r\n      let Type = x[i].Ammunition.Arme.replace(\r\n        \"Arme                              = EArmeType/\",\r\n        \"\"\r\n      );\r\n      let Mags = salves[x[i].SalvoStockIndex];\r\n      let Salvos = x[i].Ammunition.NbTirParSalves;\r\n      let Barrage = x[i].Ammunition.NbSalvosShootOnPosition;\r\n      let Power = x[i].Power_ForInterface;\r\n      let Accuracy;\r\n      if (x[i].Ammunition.HitRollRule.Idling === \"0.0\") {\r\n        Accuracy = x[i].Ammunition.DispersionAtMaxRange.replace(\r\n          \") * Metre)\",\r\n          \"\"\r\n        ).replace(\"((\", \"\");\r\n      } else {\r\n        Accuracy = x[i].Ammunition.HitRollRule.Idling;\r\n      }\r\n      let Range = parseRange(x[i].Ammunition);\r\n      let AOE = parseAOE(x[i].Ammunition.RadiusSplashPhysicalDamages);\r\n\r\n      Ammos.push({ Type, Mags, Salvos, Barrage, Power, Accuracy, Range, AOE });\r\n    }\r\n\r\n    return <React.Fragment>{Ammos.map(this.showWeapon)}</React.Fragment>;\r\n  }\r\n}\r\n\r\nexport class DisplayExp extends PureComponent {\r\n  render() {\r\n    let x = this.props.Experiencelevel;\r\n    let css = this.props.css;\r\n    if (x === 0) {\r\n      return <div />;\r\n    } else if (x === 1) {\r\n      return <img src=\"img/grade1.tgv.png\" className={css} alt={x} />;\r\n    } else if (x === 2) {\r\n      return <img src=\"img/grade2.tgv.png\" className={css} alt={x} />;\r\n    } else if (x === 3) {\r\n      return <img src=\"img/grade3.tgv.png\" className={css} alt={x} />;\r\n    }\r\n  }\r\n}\r\n\r\nexport class DisplayPara extends PureComponent {\r\n  render() {\r\n    let x = this.props.IsParachutist;\r\n    if (x) {\r\n      return (\r\n        <img\r\n          src=\"img/para_wingr.tgv.png\"\r\n          className=\"img-xp\"\r\n          alt=\"displayPara\"\r\n        />\r\n      );\r\n    }\r\n    return <div />;\r\n  }\r\n}\r\n\r\nexport class DisplaySpecial extends PureComponent {\r\n  render() {\r\n    let x = this.props.Spec;\r\n    let css = this.props.css;\r\n    if (x === null) {\r\n      return <div />;\r\n    }\r\n    return (\r\n      <img\r\n        src={\r\n          \"img/\" +\r\n          x.replace(\"Texture_Speciality_Icon_\", \"\").toLowerCase() +\r\n          \".tgv.png\"\r\n        }\r\n        className={css}\r\n        alt={\"DisplaySpecial\"}\r\n      />\r\n    );\r\n  }\r\n}\r\n","import React, { PureComponent } from \"react\";\r\nimport { parsePhase, parseAlias, parsePicture } from \"../js/parsers\";\r\nimport {\r\n  DisplayAP,\r\n  DisplayAV,\r\n  DisplaySpecial,\r\n  DisplayExp\r\n} from \"../DisplayComponents\";\r\n\r\nclass PureDisplayRow extends PureComponent {\r\n  render() {\r\n    if (this.props.Parsed.length === 0) {\r\n      return null;\r\n    }\r\n    return (\r\n      <div className=\"row card-body\">\r\n        {this.props.Parsed.map(this.showCard)}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  showCard = (x, i) => {\r\n    if (typeof x.Descriptor === \"undefined\") {\r\n      return (\r\n        <div className=\"col-xl-1 col-xl-10\" key={i}>\r\n          <h3 key={i}> {x} </h3>\r\n        </div>\r\n      );\r\n    }\r\n    return (\r\n      <div className=\"col-xl-1 col-xl-10\" key={i}>\r\n        <PureDisplay DB={this.props.DB} x={x} />\r\n      </div>\r\n    );\r\n  };\r\n}\r\n\r\nclass PureDisplay extends PureComponent {\r\n  parsePrice = () => {\r\n    if (this.props.x.TransportUnit === null) {\r\n      return this.props.x.Unit.ProductionPrice;\r\n    }\r\n    return (\r\n      this.props.x.Unit.ProductionPrice +\r\n      this.props.x.TransportUnit.ProductionPrice\r\n    );\r\n  };\r\n  parseName = x => {\r\n    if (x.TransportUnit === null) {\r\n      return (\r\n        x.Unit.AliasName + \" \" + this.props.fCount(x) + \"/\" + x.PackAvailabilty\r\n      );\r\n    } else {\r\n      return (\r\n        x.Unit.AliasName + \" \" + this.props.fCount(x) + \"/\" + x.PackAvailabilty\r\n      );\r\n    }\r\n  };\r\n  parseValidity = x => {\r\n    if (this.props.fValid(x)) {\r\n      return \"\";\r\n    } else {\r\n      return \"p-err\";\r\n    }\r\n  };\r\n  parsePrice = (x, y) => {\r\n    if (y === null) {\r\n      return Number(x.ProductionPrice);\r\n    }\r\n    return Number(x.ProductionPrice) + Number(y.ProductionPrice);\r\n  };\r\n\r\n  render() {\r\n    let Unit = this.props.x.Unit;\r\n    let TransportUnit = this.props.x.TransportUnit;\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"div-rel\">\r\n          <img\r\n            src={parsePicture(Unit, \"md\")}\r\n            className=\"img-back\"\r\n            alt=\"unitPortrait\"\r\n          />\r\n          <h5 className=\"txt-price\">{this.parsePrice(Unit, TransportUnit)}</h5>\r\n          <h5 className=\"txt-avail\">{this.props.x.UnitsPerPack}</h5>\r\n          <h5 className=\"txt-phase\">\r\n            {parsePhase(this.props.x.AvailableFromPhase)}\r\n          </h5>\r\n          <DisplayExp\r\n            Experiencelevel={this.props.x.Experiencelevel}\r\n            css=\"img-rel-xp\"\r\n          />\r\n          <DisplaySpecial Spec={Unit.SpecialtyTexture} css=\"img-rel-spec\" />\r\n          <DisplayAP AP={Unit.APValue} css=\"img-rel-ap\" />\r\n          <DisplayAV AV={Unit.PlatingValue} css=\"img-rel-ap\" />\r\n        </div>\r\n        <PureName x={this.props.x} />\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nclass PureName extends PureComponent {\r\n  render() {\r\n    let x = this.props.x;\r\n    if (this.props.x.TransportUnit === null) {\r\n      return <p>{parseAlias(x.Unit)} </p>;\r\n    }\r\n    return (\r\n      <React.Fragment>\r\n        <p>{x.Unit.AliasName}</p>\r\n        <p> {x.TransportUnit.AliasName}</p>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\nexport default PureDisplayRow;\r\n","import React, { Component } from \"react\";\r\n\r\nclass SubmitDeckHeader extends Component {\r\n  getPicture = () => {\r\n    let img =\r\n      \"img/d/\" +\r\n      this.props.SelectedDeckObject.Division.toLowerCase() +\r\n      \".tgv.png\";\r\n    return img;\r\n  };\r\n\r\n  render() {\r\n    if (this.props.SelectedDeckObject === null) {\r\n      return (\r\n        <React.Fragment>\r\n          <div className=\"card-header\">\r\n            <div className=\"row\">\r\n              <div className=\"col-md\">\r\n                <div\r\n                  className=\"btn btn-block btn-default btn-primary\"\r\n                  onClick={() => this.props.API.showDeck(null)}\r\n                >\r\n                  Import from Deck Builder\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </React.Fragment>\r\n      );\r\n    }\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"card-header\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-2\">\r\n              <img\r\n                src={this.getPicture()}\r\n                className=\"img-big mx-auto\"\r\n                alt=\"unitPortrait\"\r\n              />\r\n            </div>\r\n            <div className=\"col-md-10\">\r\n              <div className=\"row\">\r\n                <div className=\"col-md-10\">\r\n                  <h4 className=\"text-center\">\r\n                    {this.props.SelectedDeckObject.Name}\r\n                  </h4>\r\n                  <p>{this.props.SelectedDeckObject.Description}</p>\r\n                </div>\r\n                <div className=\"col-md-2\">\r\n                  <div\r\n                    className=\"btn btn-outline-secondary btn-block btn-sm\"\r\n                    onClick={this.props.API.editDeck}\r\n                  >\r\n                    <p>To deck builder</p>\r\n                  </div>\r\n                  <div\r\n                    className=\"btn btn-outline-secondary btn-block btn-sm\"\r\n                    onClick={() => this.props.API.showDeck(null)}\r\n                  >\r\n                    <p>From deck builder</p>\r\n                  </div>\r\n                  <div\r\n                    className=\"btn btn-outline-secondary btn-block btn-sm\"\r\n                    onClick={this.props.deckDetailsDialog}\r\n                  >\r\n                    <p>Edit header</p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"col-md-12\">\r\n              <p>{this.props.SelectedDeckObject.code}</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SubmitDeckHeader;\r\n","import React, { Component } from \"react\";\r\nimport PureDisplayRow from \"./PureDisplayRow\";\r\nimport SubmitDeckHeader from \"./SubmitDeckHeader\";\r\n\r\nclass SubmitDeck extends Component {\r\n  render() {\r\n    if (this.props.DeckCode === null) {\r\n      return null;\r\n    }\r\n    return (\r\n      <React.Fragment>\r\n        <SubmitDeckHeader\r\n          API={this.props.API}\r\n          SelectedDeckCode={this.props.SelectedDeckCode}\r\n          SelectedDeckObject={this.props.SelectedDeckObject}\r\n          showEditDialog={this.props.showEditDialog}\r\n          deckDetailsDialog={this.props.deckDetailsDialog}\r\n        />\r\n        <PureDisplayRow DB={this.props.DB} Parsed={this.props.DeckUnits[0]} />\r\n        <PureDisplayRow DB={this.props.DB} Parsed={this.props.DeckUnits[1]} />\r\n        <PureDisplayRow DB={this.props.DB} Parsed={this.props.DeckUnits[2]} />\r\n        <PureDisplayRow DB={this.props.DB} Parsed={this.props.DeckUnits[3]} />\r\n        <PureDisplayRow DB={this.props.DB} Parsed={this.props.DeckUnits[4]} />\r\n        <PureDisplayRow DB={this.props.DB} Parsed={this.props.DeckUnits[5]} />\r\n        <PureDisplayRow DB={this.props.DB} Parsed={this.props.DeckUnits[6]} />\r\n        <PureDisplayRow DB={this.props.DB} Parsed={this.props.DeckUnits[7]} />\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SubmitDeck;\r\n","import React, { PureComponent } from \"react\";\r\n\r\nclass DeckListDisplay extends PureComponent {\r\n  getPicture = x => {\r\n    let img = \"img/d/\" + x.Division.toLowerCase() + \".tgv.png\";\r\n    return img;\r\n  };\r\n\r\n  parseAuthor = x => {\r\n    if (this.props.User !== null && x.UID === this.props.User.uid) {\r\n      return (\r\n        <button\r\n          className=\"btn btn-block btn-danger\"\r\n          onClick={() => this.props.delete(x)}\r\n        >\r\n          <p>X</p>\r\n        </button>\r\n      );\r\n    } else {\r\n      return (\r\n        <div onClick={() => this.props.vote(x)}>\r\n          <img\r\n            alt=\"voteIcon\"\r\n            src={this.parseVote(\r\n              x.Score.includes(this.props.User !== null && this.props.User.uid)\r\n            )}\r\n          />\r\n        </div>\r\n      );\r\n    }\r\n  };\r\n\r\n  makeUnitEntry = (x, i) => {\r\n    return (\r\n      <tr key={i} onClick={() => {}}>\r\n        <td>{x.Name}</td>\r\n        <td>\r\n          <img src={this.getPicture(x)} className=\"img-xp\" alt=\"unitPortrait\" />\r\n        </td>\r\n        <td>{x.by}</td>\r\n        <td className=\"text-right\">{x.Score.length}</td>\r\n        <td>{this.parseAuthor(x)}</td>\r\n        <td>\r\n          <div\r\n            className=\"btn btn-outline-secondary btn-block btn-sm\"\r\n            onClick={() => this.props.show(x)}\r\n          >\r\n            <p>Display</p>\r\n          </div>\r\n        </td>\r\n      </tr>\r\n    );\r\n  };\r\n\r\n  parseVote = x => {\r\n    if (x) {\r\n      return \"img/favdecktrue.png\";\r\n    }\r\n    return \"img/favdeckfalse.png\";\r\n  };\r\n\r\n  render() {\r\n    if (this.props.DeckList === null) {\r\n      return null;\r\n    }\r\n    return (\r\n      <div className=\"col-md-12  card-body\">\r\n        <table className=\"sortable table-hover\" id=\"deckTable\">\r\n          <tbody>\r\n            <tr>\r\n              <th>Deck Name</th>\r\n              <th>Division</th>\r\n              <th>By</th>\r\n              <th>Date</th>\r\n              <th>Score</th>\r\n              <th />\r\n              <th />\r\n            </tr>\r\n            {this.props.DeckList.map(this.makeUnitEntry)}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DeckListDisplay;\r\n","import React, { Component } from \"react\";\r\nimport FilterHeader from \"./FilterHeader\";\r\nimport SubmitDeck from \"./SubmitDeck\";\r\nimport DeckListDisplay from \"./DeckListDisplay\";\r\nimport SkyLight from \"react-skylight\";\r\n\r\nclass DeckDB extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      Name: \"insert name\",\r\n      Description: \"insert description\",\r\n      Author: \"insert title\"\r\n    };\r\n  }\r\n\r\n  showDeck = x => {\r\n    if (x !== null) {\r\n      //deck obj. from DB\r\n      this.setState({\r\n        Name: x.Name,\r\n        Description: x.Description,\r\n        Author: x.Author\r\n      });\r\n    } else {\r\n      //deck obj from deck builder\r\n      this.setState({\r\n        Name: \"Tom Atkins\",\r\n        Description: \"insert description\",\r\n        Author: \"insert title\"\r\n      });\r\n    }\r\n    this.props.deckDB.API.showDeck(x);\r\n  };\r\n\r\n  renderEditDialog = x => {\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"card\">\r\n          <div className=\"row card-body\">\r\n            <div className=\"col-md-3\">\r\n              <h4>Name:</h4>\r\n            </div>\r\n            <div className=\"col-md-8\">\r\n              <input\r\n                className=\"form-control\"\r\n                value={this.state.Name}\r\n                type=\"text\"\r\n                onChange={this.handleChangeName}\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"row card-body\">\r\n            <div className=\"col-md-3\">\r\n              <h4>Description:</h4>\r\n            </div>\r\n            <div className=\"col-md-8\">\r\n              <input\r\n                className=\"form-control\"\r\n                value={this.state.Description}\r\n                type=\"text\"\r\n                onChange={this.handleChangeDesc}\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"row card-body\">\r\n            <div className=\"col-md-3\">\r\n              <h4>Nick:</h4>\r\n            </div>\r\n            <div className=\"col-md-8\">\r\n              <input\r\n                className=\"form-control\"\r\n                value={this.state.Author}\r\n                type=\"text\"\r\n                onChange={this.handleChangeAuth}\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"row card-footer\">\r\n            <div\r\n              className=\"btn btn-block btn-outline-default\"\r\n              onClick={() => {\r\n                this.props.deckDB.API.editHeader(this.state);\r\n                this.deckDetailsDialog.hide();\r\n              }}\r\n            >\r\n              Save change\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"row card-footer\">\r\n            <div\r\n              className=\"btn btn-block btn-primary\"\r\n              onClick={() => {\r\n                this.props.deckDB.API.uploadDeck(this.state);\r\n                this.deckDetailsDialog.hide();\r\n              }}\r\n            >\r\n              Upload Deck\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  };\r\n\r\n  handleChangeName = event => {\r\n    this.setState({\r\n      Name: event.target.value\r\n    });\r\n  };\r\n  handleChangeDesc = event => {\r\n    this.setState({\r\n      Description: event.target.value\r\n    });\r\n  };\r\n  handleChangeAuth = event => {\r\n    this.setState({\r\n      Author: event.target.value\r\n    });\r\n  };\r\n  showDeckDetails = () => {\r\n    this.deckDetailsDialog.show();\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"row\">\r\n          <div className=\"col-xl-5\">\r\n            <div className=\"card\">\r\n              <FilterHeader\r\n                DB={this.props.DB}\r\n                filter={this.props.deckDB.API.filter}\r\n              />\r\n              <DeckListDisplay\r\n                DeckList={this.props.deckDB.DeckList}\r\n                vote={this.props.deckDB.API.vote}\r\n                show={this.showDeck}\r\n                delete={this.props.deckDB.API.deleteDeck}\r\n                User={this.props.User}\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"col-xl-7\">\r\n            <div className=\"card\">\r\n              <SubmitDeck\r\n                SelectedDeckCode={this.props.deckDB.SelectedDeckCode}\r\n                SelectedDeckObject={this.props.deckDB.SelectedDeckObject}\r\n                DeckUnits={this.props.deckDB.DeckUnits}\r\n                DB={this.props.DB}\r\n                API={this.props.deckDB.API}\r\n                show={this.showDeck}\r\n                deckDetailsDialog={this.showDeckDetails}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <SkyLight\r\n          hideOnOverlayClicked\r\n          ref={ref => (this.deckDetailsDialog = ref)}\r\n          title={this.renderEditDialog(this.props.deckDB)}\r\n        />\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DeckDB;\r\n","import { parseToBin, parseFromBin } from \"./parsers\";\r\n\r\nclass DeckAssembly {\r\n  constructor() {\r\n    //missing: actual div name\r\n    this.Serializer = 0;\r\n    this.DivisionNationalite = \"\"; // Axis/Allied\r\n\r\n    this.PhaseA = 0; //incomes\r\n    this.PhaseB = 0;\r\n    this.PhaseC = 0;\r\n\r\n    this.PackList = []; //avail. units\r\n\r\n    this.Emblem = \"\";\r\n    this.Portrait = \"\";\r\n\r\n    this.CostMatrix = [\r\n      [\"X\", \"X\", \"X\", \"X\", \"X\", \"X\", \"X\", \"X\", \"X\", \"X\"],\r\n      [\"X\", \"X\", \"X\", \"X\", \"X\", \"X\", \"X\", \"X\", \"X\", \"X\"],\r\n      [\"X\", \"X\", \"X\", \"X\", \"X\", \"X\", \"X\", \"X\", \"X\", \"X\"],\r\n      [\"X\", \"X\", \"X\", \"X\", \"X\", \"X\", \"X\", \"X\", \"X\", \"X\"],\r\n      [\"X\", \"X\", \"X\", \"X\", \"X\", \"X\", \"X\", \"X\", \"X\", \"X\"],\r\n      [\"X\", \"X\", \"X\", \"X\", \"X\", \"X\", \"X\", \"X\", \"X\", \"X\"],\r\n      [\"X\", \"X\", \"X\", \"X\", \"X\", \"X\", \"X\", \"X\", \"X\", \"X\"],\r\n      [\"X\", \"X\", \"X\", \"X\", \"X\", \"X\", \"X\", \"X\", \"X\", \"X\"]\r\n    ];\r\n    this.Cards = [];\r\n    this.DeckPointsTotal = 0; //max\r\n  }\r\n\r\n  setDeck(deck) {\r\n    this.Serializer = deck.EncodeInt;\r\n    this.DivisionNationalite = deck.DivisionNationalite;\r\n    this.PhaseA = deck.PhaseA;\r\n    this.PhaseB = deck.PhaseB;\r\n    this.PhaseC = deck.PhaseC;\r\n    this.PackList = deck.PackList;\r\n\r\n    this.Emblem = deck.EmblemTexture;\r\n    this.Portrait = deck.PortraitTexture;\r\n\r\n    let matrix = new Array(8);\r\n    for (let i = 0; i < 8; i++) {\r\n      matrix[i] = new Array(10);\r\n      for (let j = 0; j < 10; j++) {\r\n        if (typeof deck.CostMatrix[i][j] === \"undefined\") {\r\n          matrix[i][j] = \"X\";\r\n        } else {\r\n          matrix[i][j] = deck.CostMatrix[i][j];\r\n        }\r\n      }\r\n    }\r\n\r\n    /*:eugene:\r\n     *cost matrix enum:\r\n     *0 ~air~ \"avion\"\r\n     *1 ~tank~ 'char\"\r\n     *2 arty\r\n     *3 support\r\n     *4 inf\r\n     *5 recon\r\n     *6 PAK\r\n     *7 AA*/\r\n\r\n    this.CostMatrix[7] = matrix[0];\r\n    this.CostMatrix[2] = matrix[1];\r\n    this.CostMatrix[6] = matrix[2];\r\n    this.CostMatrix[3] = matrix[3];\r\n    this.CostMatrix[1] = matrix[4];\r\n    this.CostMatrix[0] = matrix[5];\r\n    this.CostMatrix[4] = matrix[6];\r\n    this.CostMatrix[5] = matrix[7];\r\n\r\n    this.DeckPointsTotal = deck.MaxActivationPoints;\r\n    this.encodeDeck();\r\n    return this;\r\n  }\r\n\r\n  getEncodeID(deckCode) {\r\n    //pure function, object independent\r\n    if (typeof deckCode === \"undefined\" || deckCode.length < 4) {\r\n      return -1;\r\n    }\r\n    let deckBinary = parseToBin(deckCode);\r\n    let bin = \"\";\r\n    for (let i = 0; i < 10; i++) {\r\n      bin += deckBinary.charAt(i);\r\n    }\r\n    let deckInt = parseInt(bin, 2);\r\n    return deckInt;\r\n  }\r\n\r\n  decodeDeck(deckCode, DB) {\r\n    //decode to binary\r\n    if (typeof deckCode === \"undefined\" || deckCode.length < 4) {\r\n      let newdeck = new DeckAssembly(); //if code infalid return empty deck\r\n      newdeck.ExportCode = newdeck.encodeDeck();\r\n      return newdeck;\r\n    }\r\n    this.Cards = [];\r\n    let deckBinary = parseToBin(deckCode);\r\n    let sUCount = 10; //start of unit counter\r\n    let sUCOdes = 18; //start of unit encoding\r\n    let sULen = 18; //unit card length (+4 for count)\r\n\r\n    //extract deck\r\n    let bin = \"\";\r\n    for (let i = 0; i < sUCount; i++) {\r\n      bin += deckBinary.charAt(i);\r\n    }\r\n    let deckInt = parseInt(bin, 2);\r\n\r\n    let index = DB.findIndex(e => e.EncodeInt === deckInt);\r\n    if (index === -1) {\r\n      console.error(\"no such deck in db\");\r\n    } else {\r\n      if (typeof DB[index].MaxActivationPoints !== \"undefined\") {\r\n        this.setDeck(DB[index]);\r\n\r\n        //Units\r\n        let sCount = \"\"; //get number of unique units in deck\r\n        for (let i = sUCount; i < sUCOdes; i++) {\r\n          sCount += deckBinary.charAt(i);\r\n        }\r\n        let CardsCount = parseInt(sCount, 2); //total amount of unique units in deck\r\n\r\n        let iPC = sUCOdes; //<-positioncounter\r\n        for (let i = 0; i < CardsCount; i++) {\r\n          /*for the rest of the binary, count out the unit, then the amount of cards*/\r\n          let sUnit = \"\",\r\n            sAmount = \"\";\r\n          for (let j = iPC; j < iPC + sULen; j++) {\r\n            sUnit += deckBinary.charAt(j);\r\n          }\r\n          iPC += sULen;\r\n          for (let j = iPC; j < iPC + 4; j++) {\r\n            sAmount += deckBinary.charAt(j);\r\n          }\r\n          iPC += 4;\r\n          let iAmount = parseInt(sAmount, 2);\r\n\r\n          /*get unit from DB and add to deck, one per amount\r\n           * since the deck records two identical cards as {card, 2}\r\n           * and we need them as {card}, {card}, we'll be incrementing\r\n           * CardsCount on every non-first idencital card, since they\r\n           * \"don't count\" in the code's cards counter\r\n           */\r\n          this.Cards[i] = this.PackList.filter(function(pack) {\r\n            //first card is added right away\r\n            return pack.EncodeInt === parseInt(sUnit, 2);\r\n          })[0];\r\n          for (let j = 0; j < iAmount - 1; j++) {\r\n            //second, if it's there, is added after the index move\r\n            i++;\r\n            CardsCount++;\r\n            this.Cards[i] = this.PackList.filter(function(pack) {\r\n              return pack.EncodeInt === parseInt(sUnit, 2);\r\n            })[0];\r\n          }\r\n        }\r\n        /* removes nards that were not found : happens if you decode a string\r\n         containing units not found in this deck. this is crash avoidance, as\r\n         the SD1 firestore setup doesn't actually get() them*/\r\n        this.Cards = this.Cards.filter(function(el) {\r\n          return el != null;\r\n        });\r\n\r\n        this.ExportCode = this.encodeDeck();\r\n        return this;\r\n      }\r\n    }\r\n  }\r\n\r\n  encodeDeck() {\r\n    let BinaryOut = \"\";\r\n    let padDeck = \"0000000000\";\r\n    BinaryOut +=\r\n      padDeck.substring(\r\n        0,\r\n        padDeck.length - this.Serializer.toString(2).length\r\n      ) + this.Serializer.toString(2); //pad left\r\n    /*compression*/\r\n    //sort for tally  <<will not return the same code as input, but will return a working code\r\n    this.Cards.sort(function(a, b) {\r\n      return a.EncodeInt > b.EncodeInt ? 1 : b.EncodeInt > a.EncodeInt ? -1 : 0;\r\n    });\r\n\r\n    //unit count\r\n    let uniqueUnits = [];\r\n    let currentCount = 0;\r\n    for (let i = 0; i < this.Cards.length; i++) {\r\n      if (\r\n        typeof this.Cards[i + 1] !== \"undefined\" &&\r\n        this.Cards[i].EncodeInt === this.Cards[i + 1].EncodeInt\r\n      ) {\r\n        currentCount++;\r\n      } else {\r\n        currentCount++;\r\n        let unit = this.Cards[i].EncodeInt;\r\n        uniqueUnits.push({ unit, currentCount });\r\n        currentCount = 0;\r\n      }\r\n    }\r\n\r\n    let padUnique = \"00000000\";\r\n    BinaryOut +=\r\n      padUnique.substring(\r\n        0,\r\n        padUnique.length - uniqueUnits.length.toString(2).length\r\n      ) + uniqueUnits.length.toString(2); //pad left\r\n\r\n    //export units\r\n    let padUnit = \"000000000000000000\";\r\n    let padCount = \"0000\";\r\n    for (let i = 0; i < uniqueUnits.length; i++) {\r\n      let unit = uniqueUnits[i].unit.toString(2);\r\n      let tally = uniqueUnits[i].currentCount.toString(2);\r\n      BinaryOut += padUnit.substring(0, padUnit.length - unit.length) + unit; //pad left\r\n      BinaryOut +=\r\n        padCount.substring(0, padCount.length - tally.length) + tally;\r\n    }\r\n    let charArray = BinaryOut.match(/.{1,6}/g); //groups of six\r\n    this.ExportCode = parseFromBin(charArray);\r\n    return this.ExportCode;\r\n  }\r\n\r\n  addUnit(unit) {\r\n    this.Cards.push(unit);\r\n    this.encodeDeck();\r\n    return this;\r\n  }\r\n\r\n  deleteUnit(unit) {\r\n    this.Cards.splice(this.Cards.indexOf(unit), 1);\r\n    this.encodeDeck();\r\n    return this;\r\n  }\r\n}\r\nexport default DeckAssembly;\r\n","import DeckAssembly from \"../js/DeckAssembly\";\r\n\r\nexport function parseGameMode(x) {\r\n  switch (x) {\r\n    case \"1\":\r\n      return \"Skirmish\";\r\n    case \"3\":\r\n      return \"Historical\";\r\n    default:\r\n      return \"unknown\";\r\n  }\r\n}\r\n\r\nexport function parseVictoryCond(x) {\r\n  switch (x) {\r\n    case \"1\":\r\n      return \"Destruction\";\r\n    case \"2\":\r\n      return \"Siege\";\r\n    case \"3\":\r\n      return \"Economy\";\r\n    case \"4\":\r\n      return \"Conquest\";\r\n    case \"5\":\r\n      return \"Close Combat\";\r\n    default:\r\n      return \"error\";\r\n  }\r\n}\r\n\r\nexport function parseMap(x) {\r\n  if (x.indexOf(\"Sainte_Mere_Eglise\") !== -1) {\r\n    if (x.indexOf(\"_Alt\") !== -1) {\r\n      //non-duelist is _alt or none\r\n      return \"Sainte Mere l'Eglise - Duelist\";\r\n    }\r\n    return \"Sainte Mere l'Eglise\";\r\n  } else if (x.indexOf(\"Carpiquet\") !== -1) {\r\n    if (x.indexOf(\"_Alt\") !== -1) {\r\n      return \"Carpiquet - Duelist\";\r\n    }\r\n    return \"Carpiquet\";\r\n  } else if (x.indexOf(\"Pegasus_Bridge\") !== -1) {\r\n    return \"Pegasus Bridge\";\r\n  } else if (x.indexOf(\"Omaha\") !== -1) {\r\n    return \"Omaha\";\r\n  } else if (x.indexOf(\"Colombelles\") !== -1) {\r\n    return \"Colombelles\";\r\n  } else if (x.indexOf(\"VillersBocage\") !== -1) {\r\n    return \"Merderet\";\r\n  } else if (x.indexOf(\"Odon\") !== -1) {\r\n    return \"Odon\";\r\n  } else if (x.indexOf(\"Colleville\") !== -1) {\r\n    return \"Colleville\";\r\n  } else if (x.indexOf(\"Pointe_Du_Hoc\") !== -1) {\r\n    return \"Pointe Du Hoc\";\r\n  } else if (x.indexOf(\"Mont_Ormel\") !== -1) {\r\n    return \"Mont Ormel\";\r\n  } else if (x.indexOf(\"Bois_De_Limors\") !== -1) {\r\n    return \"Bois De Limors\";\r\n  } else if (x.indexOf(\"Cheux\") !== -1) {\r\n    return \"Cheux\";\r\n  } else if (x.indexOf(\"Caumont_L_Evente\") !== -1) {\r\n    return \"Caumont L'Evente\";\r\n  } else if (x.indexOf(\"Cote112\") !== -1) {\r\n    return \"Cote 112\";\r\n  } else if (x.indexOf(\"Pegaville\") !== -1) {\r\n    return \"Odon River\";\r\n  } else if (x.indexOf(\"276b22a8:334ddc5e:a85391a2:4deed403\") !== -1) {\r\n    return \"Rangers lead the way\";\r\n  } else if (x.indexOf(\"c3a20bf5:a1400442:eb590a8a:4953f79d\") !== -1) {\r\n    return \"Collombelles Assault\";\r\n  } else return \"unknown\";\r\n}\r\n\r\nexport function parseTimeLimit(x) {\r\n  if (x === \"0\") {\r\n    return \"No limit\";\r\n  }\r\n  return x / 60 + \"min\";\r\n}\r\n\r\nexport function parseIncomeRate(x) {\r\n  switch (x) {\r\n    case \"0\":\r\n      return \"none\";\r\n    case \"1\":\r\n      return \"very low\";\r\n    case \"2\":\r\n      return \"low\";\r\n    case \"3\":\r\n      return \"medium\";\r\n    case \"4\":\r\n      return \"high\";\r\n    case \"5\":\r\n      return \"very high\";\r\n    default:\r\n      return \"error\";\r\n  }\r\n}\r\n\r\nexport function parseGameType(x) {\r\n  switch (x) {\r\n    case \"0\":\r\n      return \"⍟/卐\";\r\n    case \"1\":\r\n      return \"⍟/⍟\";\r\n    case \"2\":\r\n      return \"卐/卐\";\r\n    default:\r\n      return \"unknown\";\r\n  }\r\n}\r\n\r\nexport function parsePicture(x) {\r\n  let foo = new DeckAssembly();\r\n  let ID = foo.getEncodeID(x);\r\n  let emblem = \"\";\r\n  switch (ID) {\r\n    case 22:\r\n      emblem = \"3rd_infantry_division\";\r\n      break;\r\n    case 74:\r\n      emblem = \"2db\";\r\n      break;\r\n    case 23:\r\n      emblem = \"2db\";\r\n      break;\r\n    case 75:\r\n      emblem = \"116_panzer\";\r\n      break;\r\n    case 24:\r\n      emblem = \"116_panzer\";\r\n      break;\r\n    case 25:\r\n      emblem = \"12_ss_panzer\";\r\n      break;\r\n    case 26:\r\n      emblem = \"17_ss_panzergrenadier\";\r\n      break;\r\n    case 180:\r\n      emblem = \"ss_panzerdivision_lssah\";\r\n      break;\r\n    case 76:\r\n      emblem = \"21_panzer\";\r\n      break;\r\n    case 27:\r\n      emblem = \"21_panzer\";\r\n      break;\r\n    case 28:\r\n      emblem = \"352_infanterie\";\r\n      break;\r\n    case 66:\r\n      emblem = \"352_infanterie\";\r\n      break;\r\n    case 77:\r\n      emblem = \"3_fallschirmjager\";\r\n      break;\r\n    case 29:\r\n      emblem = \"3_fallschirmjager\";\r\n      break;\r\n    case 30:\r\n      emblem = \"716_infanterie\";\r\n      break;\r\n    case 31:\r\n      emblem = \"luftlanfe\";\r\n      break;\r\n    case 32:\r\n      emblem = \"panzer_lehr\";\r\n      break;\r\n    case 33:\r\n      emblem = \"dywizja_pancerna\";\r\n      break;\r\n    case 34:\r\n      emblem = \"15th_infantry_division\";\r\n      break;\r\n    case 35:\r\n      emblem = \"6th_airborne_division\";\r\n      break;\r\n    case 36:\r\n      emblem = \"guards_armoured_division\";\r\n      break;\r\n    case 70:\r\n      emblem = \"101st_airborne\";\r\n      break;\r\n    case 37:\r\n      emblem = \"101st_airborne\";\r\n      break;\r\n    case 179:\r\n      emblem = \"1st_us_infantry_division\";\r\n      break;\r\n    case 78:\r\n      emblem = \"2nd_infantry_division\";\r\n      break;\r\n    case 38:\r\n      emblem = \"2nd_infantry_division\";\r\n      break;\r\n    case 71:\r\n      emblem = \"3rd_armored_division\";\r\n      break;\r\n    case 39:\r\n      emblem = \"3rd_armored_division\";\r\n      break;\r\n    case 45:\r\n      emblem = \"16_luftwaffen\";\r\n      break;\r\n    case 73:\r\n      emblem = \"16_luftwaffen\";\r\n      break;\r\n    case 80:\r\n      emblem = \"9_panzer\";\r\n      break;\r\n    case 46:\r\n      emblem = \"9_panzer\";\r\n      break;\r\n    case 81:\r\n      emblem = \"commando_brigade\";\r\n      break;\r\n    case 43:\r\n      emblem = \"commando_brigade\";\r\n      break;\r\n    case 79:\r\n      emblem = \"4th_armored\";\r\n      break;\r\n    case 51:\r\n      emblem = \"4th_armored\";\r\n      break;\r\n    case 47:\r\n      emblem = \"demi_brigade_sas\";\r\n      break;\r\n    case 48:\r\n      emblem = \"2_panzer\";\r\n      break;\r\n    case 49:\r\n      emblem = \"festung_gross_paris\";\r\n      break;\r\n    case 50:\r\n      emblem = \"7th_armoured\";\r\n      break;\r\n\r\n    default:\r\n      break;\r\n  }\r\n  return \"img/d/\" + emblem + \".tgv.png\";\r\n}\r\n","import React, { PureComponent } from \"react\";\r\nimport {\r\n  parseVictoryCond,\r\n  parseMap,\r\n  parseTimeLimit,\r\n  parseIncomeRate,\r\n  parseGameType,\r\n  parsePicture\r\n} from \"../js/ReplayParsers\";\r\n\r\nclass ReplayDBDisplay extends PureComponent {\r\n  makeUnitEntry = (x, i) => {\r\n    return (\r\n      <tr key={i} onClick={() => {}}>\r\n        <td>{x.Name}</td>\r\n        <td>\r\n          {x.Players.map((foo, j) => {\r\n            return <p key={j}>{foo}</p>;\r\n          })}\r\n        </td>\r\n        <td>\r\n          {x.Decks.map((foo, j) => {\r\n            return (\r\n              <p key={j}>\r\n                <img\r\n                  src={parsePicture(foo)}\r\n                  className=\"img-xp\"\r\n                  alt=\"unitPortrait\"\r\n                />\r\n              </p>\r\n            );\r\n          })}\r\n        </td>\r\n        <td>{parseMap(x.Map)}</td>\r\n        <td>{parseGameType(x.GameType)}</td>\r\n        <td>{parseIncomeRate(x.IncomeRate)}</td>\r\n        <td>{x.InitMoney}</td>\r\n        <td>{x.ScoreLimit}</td>\r\n        <td>{parseTimeLimit(x.TimeLimit)}</td>\r\n        <td>{parseVictoryCond(x.VictoryCond)}</td>\r\n        <td>{x.Uploaded.toDate().toLocaleDateString()}</td>\r\n        <td className=\"text-right\">{x.ScoreCount}</td>\r\n        <td>{this.parseAuthor(x)}</td>\r\n        <td>\r\n          <div\r\n            className=\"btn btn-outline-secondary btn-block btn-sm\"\r\n            //onClick={() => this.props.show(x)}\r\n          >\r\n            <a href={x.DL}>Download</a>\r\n          </div>\r\n        </td>\r\n        <td>\r\n          <div\r\n            className=\"btn btn-outline-secondary btn-block btn-sm\"\r\n            onClick={() => this.props.show(x)}\r\n          >\r\n            <p>Display</p>\r\n          </div>\r\n        </td>\r\n      </tr>\r\n    );\r\n  };\r\n\r\n  parseAuthor = x => {\r\n    if (this.props.User !== null && x.UID === this.props.User.uid) {\r\n      return (\r\n        <button\r\n          className=\"btn btn-block btn-danger\"\r\n          onClick={() => this.props.delete(x)}\r\n        >\r\n          <p>X</p>\r\n        </button>\r\n      );\r\n    } else {\r\n      return (\r\n        <div onClick={() => this.props.vote(x)}>\r\n          <img\r\n            alt=\"voteIcon\"\r\n            src={this.parseVote(\r\n              x.Score.includes(this.props.User !== null && this.props.User.uid)\r\n            )}\r\n          />\r\n        </div>\r\n      );\r\n    }\r\n  };\r\n\r\n  parseVote = x => {\r\n    if (x) {\r\n      return \"img/favdecktrue.png\";\r\n    }\r\n    return \"img/favdeckfalse.png\";\r\n  };\r\n\r\n  render() {\r\n    if (this.props.ReplayList === null) {\r\n      return null;\r\n    }\r\n    return (\r\n      <table className=\"sortable table-bordered\" id=\"ReplayTable\">\r\n        <tbody>\r\n          <tr>\r\n            <th> Replay </th>\r\n            <th> Player </th>\r\n            <th> Deck </th>\r\n            <th> Map </th>\r\n            <th> Game Mode </th>\r\n            <th> Income </th>\r\n            <th> Starting points </th>\r\n            <th> Win points </th>\r\n            <th> Time limit </th>\r\n            <th> Win condition </th>\r\n            <th> Uploaded </th>\r\n            <th> Score </th>\r\n            <th />\r\n            <th />\r\n            <th />\r\n          </tr>\r\n          {this.props.ReplayList.map(this.makeUnitEntry)}\r\n        </tbody>\r\n      </table>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ReplayDBDisplay;\r\n","import React, { Component } from \"react\";\r\nimport { parsePicture } from \"../js/ReplayParsers\";\r\n\r\nclass ReplayDisplay extends Component {\r\n  getPicture = x => {\r\n    return \"img/d/\" + x.Emblem.toLowerCase() + \".tgv.png\";\r\n  };\r\n\r\n  makePlayerEntry = (x, i) => {\r\n    return (\r\n      <div className=\"row\" key={i}>\r\n        <div className=\"col-md-8\">{x.Player}</div>\r\n        <div className=\"col-md-2\">\r\n          <img\r\n            src={parsePicture(x.Deck)}\r\n            className=\"img-xp\"\r\n            alt=\"unitPortrait\"\r\n          />\r\n        </div>\r\n        <div\r\n          className=\"col-md-2 btn btn-outline-secondary btn-block btn-sm\"\r\n          onClick={() => this.props.API.editDeck(x.Deck)}\r\n        >\r\n          <p>To deck builder</p>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  render() {\r\n    if (this.props.Replay === null) {\r\n      return null;\r\n    }\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"row\">\r\n          <div className=\"col-md-12\">\r\n            <h4 className=\"text-center\">{this.props.Replay.Name}</h4>\r\n          </div>\r\n          <div className=\"col-md-12\">\r\n            <p>{this.props.Replay.Description}</p>\r\n          </div>\r\n          <div className=\"col-md-12\">\r\n            {this.props.ReplayDecks.map(this.makePlayerEntry)}\r\n          </div>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ReplayDisplay;\r\n","import React, { Component } from \"react\";\r\nimport ReplayDBDisplay from \"./ReplayDBDisplay\";\r\nimport ReplayDisplay from \"./ReplayDisplay\";\r\n\r\nclass ReplayDB extends Component {\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"card\">\r\n          <div className=\"row card-header\">\r\n            <div className=\"col-md-3\">\r\n              <div\r\n                className=\"btn btn-block btn-primary\"\r\n                onClick={() => this.props.filter(\"new\")}\r\n              >\r\n                Newest\r\n              </div>\r\n            </div>\r\n            <div className=\"col-md-3\">\r\n              <div\r\n                className=\"btn btn-block btn-primary\"\r\n                onClick={() => this.props.filter(\"score\")}\r\n              >\r\n                Most votes\r\n              </div>\r\n            </div>\r\n            <div className=\"col-md-3\" />\r\n            <div className=\"col-md-3\">\r\n              <div\r\n                className=\"btn btn-block btn-primary\"\r\n                onClick={() => this.props.upload()}\r\n              >\r\n                Upload\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"row card-body\">\r\n            <div className=\"col-md-8\">\r\n              <ReplayDBDisplay\r\n                DB={this.props.DB}\r\n                ReplayList={this.props.ReplayDB.ReplayList}\r\n                vote={this.props.ReplayDB.API.vote}\r\n                show={this.props.ReplayDB.API.showReplay}\r\n                delete={this.props.ReplayDB.API.deleteReplay}\r\n                User={this.props.User}\r\n              />\r\n            </div>\r\n            <div className=\"col-md-4\">\r\n              <ReplayDisplay\r\n                Replay={this.props.ReplayDB.Replay}\r\n                ReplayDecks={this.props.ReplayDB.ReplayDecks}\r\n                DB={this.props.DB}\r\n                API={this.props.ReplayDB.API}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ReplayDB;\r\n","import React, { PureComponent } from \"react\";\r\n/**C8iA8cIDyEQPJxA8XEDwYQPLBA80EDw4QPOSA8iEDyMQPDRA84EDzcgPEBA8yEDxYQPGBA8vEDwUQPMBBEWEDw8QPHRA8gEERgQPJBBEXEERkgPKBBEVEDxUQPCBA8KE*/\r\nclass DeckCodeParser extends PureComponent {\r\n  handleChange = event => {\r\n    this.props.Honey.API.setDeckCode(event.target.value);\r\n  };\r\n\r\n  render() {\r\n    let Deck = this.props.Honey.DeckBuilder.Deck;\r\n    return (\r\n      <div className=\"row card-body\">\r\n        <div className=\"col-xl-5\">\r\n          <h2>\r\n            {Deck.Emblem}: {Deck.Cards.length} / {Deck.DeckPointsTotal} |A:\r\n            {Deck.PhaseA.Income}\r\n            |B:\r\n            {Deck.PhaseB.Income}\r\n            |C:\r\n            {Deck.PhaseC.Income}|\r\n          </h2>\r\n        </div>\r\n        <div className=\"col-xl-4\">\r\n          <input\r\n            className=\"form-control\"\r\n            value={this.props.Honey.code}\r\n            type=\"text\"\r\n            onChange={this.handleChange}\r\n          />\r\n        </div>\r\n        <div className=\"col-xl\">\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn btn-default btn-block btn-top-line\"\r\n            onClick={() =>\r\n              this.props.Honey.API.parseDeckCode(this.props.Honey.code)\r\n            }\r\n          >\r\n            DECODE\r\n          </button>\r\n        </div>\r\n        <div className=\"col-xl\">\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn btn-default btn-block btn-top-line\"\r\n            onClick={() => this.props.Honey.API.parseDeckCode(\"\")}\r\n          >\r\n            CLEAR\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DeckCodeParser;\r\n","import React, { PureComponent } from \"react\";\r\nimport { parseBool, parseDescriptor } from \"../js/parsers\";\r\n\r\nclass Ammo extends PureComponent {\r\n  parseLength = x => {\r\n    if (x === null) {\r\n      return \"none\";\r\n    }\r\n    let r = x.replace(\") * Metre)\", \"\").replace(\"((\", \"\");\r\n    return Math.round(r / 5) + \"m\";\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"row card-body\">\r\n        <div className=\"col-xl-4\">\r\n          <li>\r\n            <p>TypeArme: {this.props.x.TypeArme}</p>\r\n          </li>\r\n\r\n          <li>\r\n            <p>Caliber: {this.props.x.Caliber}</p>\r\n          </li>\r\n          <li>\r\n            <p>Weapon: {parseDescriptor(this.props.x.Arme)}</p>\r\n          </li>\r\n          <li>\r\n            <p>\r\n              Projectile Type: {parseDescriptor(this.props.x.ProjectileType)}\r\n            </p>\r\n          </li>\r\n          <li>\r\n            <p>Power: {this.props.x.Puissance}</p>\r\n          </li>\r\n          <li>\r\n            <p>Time between shots: {this.props.x.TempsEntreDeuxTirs}</p>\r\n          </li>\r\n          <li>\r\n            <p>\r\n              Time between shots, min: {this.props.x.TempsEntreDeuxTirs_Min}\r\n            </p>\r\n          </li>\r\n          <li>\r\n            <p>\r\n              Time between shots, max: {this.props.x.TempsEntreDeuxTirs_Max}\r\n            </p>\r\n          </li>\r\n          <li>\r\n            <p>Max. range: {this.parseLength(this.props.x.PorteeMaximale)}</p>\r\n          </li>\r\n          <li>\r\n            <p>Min. range: {this.parseLength(this.props.x.PorteeMinimale)}</p>\r\n          </li>\r\n          <li>\r\n            <p>Affected by range: {this.props.x.EfficaciteSelonPortee}</p>\r\n          </li>\r\n          <li>\r\n            <p>\r\n              Max range dispersion:{\" \"}\r\n              {this.parseLength(this.props.x.DispersionAtMaxRange)}\r\n            </p>\r\n          </li>\r\n          <li>\r\n            <p>\r\n              Physical damage radius:{\" \"}\r\n              {this.parseLength(this.props.x.RadiusSplashPhysicalDamages)}\r\n            </p>\r\n          </li>\r\n          <li>\r\n            <p>Physical Damage: {this.props.x.PhysicalDamages}</p>\r\n          </li>\r\n        </div>\r\n        <div className=\"col-xl-4\">\r\n          <li>\r\n            <p>\r\n              Suppress damage radius:{\" \"}\r\n              {this.props.x.RadiusSplashSuppressDamages.replace(\r\n                \") * Metre)\",\r\n                \"\"\r\n              ).replace(\"((\", \"\") / 5}\r\n            </p>\r\n          </li>\r\n          <li>\r\n            <p>Suppress Damage: {this.props.x.SuppressDamages}</p>\r\n          </li>\r\n          <li>\r\n            <p>Pin radius: {this.parseLength(this.props.x.RayonPinned)}</p>\r\n          </li>\r\n          <li>\r\n            <p>Indirect fire: {parseBool(this.props.x.TirIndirect)}</p>\r\n          </li>\r\n          <li>\r\n            <p>Reflex fire: {parseBool(this.props.x.TirReflexe)}</p>\r\n          </li>\r\n          <li>\r\n            <p>\r\n              Reflex fire forbid: {parseBool(this.props.x.InterdireTirReflexe)}\r\n            </p>\r\n          </li>\r\n          <li>\r\n            <p>Gun Noise Malus: {this.props.x.NoiseDissimulationMalus}</p>\r\n          </li>\r\n          <li>\r\n            <p>Supply Cost: {this.props.x.SupplyCost}</p>\r\n          </li>\r\n          <li>\r\n            <p>Targets Districts: {parseBool(this.props.x.TargetsDistricts)}</p>\r\n          </li>\r\n          <li>\r\n            <p>Aim time: {this.props.x.TempsDeVisee}</p>\r\n          </li>\r\n          <li>\r\n            <p>Time between Salvos: {this.props.x.TempsEntreDeuxSalves}</p>\r\n          </li>\r\n          <li>\r\n            <p>\r\n              Time between Salvos, min: {this.props.x.TempsEntreDeuxSalves_Min}\r\n            </p>\r\n          </li>\r\n          <li>\r\n            <p>\r\n              Time between Salvos, max: {this.props.x.TempsEntreDeuxSalves_Max}\r\n            </p>\r\n          </li>\r\n        </div>\r\n        <div className=\"col-xl-4\">\r\n          <li>\r\n            <p>Shots per salvo: {this.props.x.NbTirParSalves}</p>\r\n          </li>\r\n          <li>\r\n            <p>Ripple fires: {this.props.x.NbrProjectilesSimultanes}</p>\r\n          </li>\r\n          <li>\r\n            <p>Ammo cost/salvo: {this.props.x.AffichageMunitionParSalve}</p>\r\n          </li>\r\n          <li>\r\n            <p>Display ammo: {parseBool(this.props.x.AffichageMenu)}</p>\r\n          </li>\r\n          <li>\r\n            <p>SmokeDescriptor: {this.props.x.SmokeDescriptor}</p>\r\n          </li>\r\n          <li>\r\n            <p>FireDescriptor: {this.props.x.FireDescriptor}</p>\r\n          </li>\r\n          <li>\r\n            <p>\r\n              Friendly fire off: {parseBool(this.props.x.IsHarmlessForAllies)}\r\n            </p>\r\n          </li>\r\n          <li>\r\n            <p>Piercing Weapon: {parseBool(this.props.x.PiercingWeapon)}</p>\r\n          </li>\r\n          <li>\r\n            <p>HitRoll - Targeted: {this.props.x.HitRollRule.Targeted}</p>\r\n          </li>\r\n          <li>\r\n            <p>HitRoll - Idling: {this.props.x.HitRollRule.Idling}</p>\r\n          </li>\r\n          <li>\r\n            <p>\r\n              HitRoll - SuccessfulShots:{\" \"}\r\n              {this.props.x.HitRollRule.SuccessfulShots}\r\n            </p>\r\n          </li>\r\n          <li>\r\n            <p>HitRoll - Base: {this.props.x.HitRollRule.Base}</p>\r\n          </li>\r\n          <li>\r\n            <p>HitRoll - Moving: {this.props.x.HitRollRule.Moving}</p>\r\n          </li>\r\n        </div>\r\n        <p>\r\n          HitMods:{\" \"}\r\n          {this.props.x.HitRollRule.HitModList.map(x => {\r\n            return x + \"|\";\r\n          })}\r\n        </p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Ammo;\r\n","import React, { PureComponent } from \"react\";\r\nimport { DisplayAmmoProps } from \"../DisplayComponents\";\r\nclass TurretHeader extends PureComponent {\r\n  getWeaponPicture = x => {\r\n    if (x === null) {\r\n      return \"no such picture\";\r\n    }\r\n    let str = x.toLowerCase();\r\n    str = str.replace(\"~/texture_interface_weapon_\", \"\");\r\n    return \"img/w/\" + str + \".tgv.png\";\r\n  };\r\n  parseGunCount = x => {\r\n    if (x.SalvoStockIndex === x.SalvoStockIndex_ForInterface) {\r\n      return <h3>x{x.WeaponNumber_ForInterface}</h3>;\r\n    } else {\r\n      return <p>hidden or merged</p>;\r\n    }\r\n  };\r\n  render() {\r\n    if (this.props.Turret === null) {\r\n      return <div />;\r\n    }\r\n    return (\r\n      <div className=\"card-header row\">\r\n        <div className=\"col-xl-3\">\r\n          <img\r\n            src={this.getWeaponPicture(\r\n              this.props.Turret.WeaponList[0].Ammunition.InterfaceWeaponTexture\r\n            )}\r\n            className=\"img-weapon\"\r\n            alt={\r\n              this.props.Turret.WeaponList[0].Ammunition.InterfaceWeaponTexture\r\n            }\r\n          />\r\n        </div>\r\n        <div className=\"col-xl\">\r\n          <h5>{this.props.Turret.WeaponList[0].Ammunition.Caliber}</h5>\r\n        </div>\r\n        <div className=\"col-xl\">\r\n          {this.parseGunCount(this.props.Turret.WeaponList[0])}\r\n        </div>\r\n        <DisplayAmmoProps\r\n          Weapons={this.props.Turret.WeaponList}\r\n          salves={this.props.Salves}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TurretHeader;\r\n","import React, { PureComponent } from \"react\";\r\nimport Ammo from \"./Ammo\";\r\nimport TurretHeader from \"./TurretHeader\";\r\nimport { parseBool } from \"../js/parsers\";\r\n\r\nclass Turret extends PureComponent {\r\n  render() {\r\n    return (\r\n      <div className=\"card\">\r\n        <TurretHeader Turret={this.props.Turret} Salves={this.props.Salves} />\r\n        <div className=\"row card-body\">\r\n          <div className=\"col-xl\">\r\n            <p>Aim Priority: {this.props.Turret.AimingPriority}</p>\r\n          </div>\r\n          <div className=\"col-xl\">\r\n            <p>Rot. Base: {this.props.Turret.AngleRotationBase}</p>\r\n          </div>\r\n          <div className=\"col-xl\">\r\n            <p>Rot. Max: {this.props.Turret.AngleRotationMax}</p>\r\n          </div>\r\n          <div className=\"col-xl\">\r\n            <p>Rot. Pitch Base: {this.props.Turret.AngleRotationBasePitch}</p>\r\n          </div>\r\n          <div className=\"col-xl\">\r\n            <p>Rot. Pitch Max: {this.props.Turret.AngleRotationMaxPitch}</p>\r\n          </div>\r\n          <div className=\"col-xl\">\r\n            <p>Rot. Pitch Min: {this.props.Turret.AngleRotationMinPitch}</p>\r\n          </div>\r\n          <div className=\"col-xl\">\r\n            <p>Rot. Speed: {this.props.Turret.VitesseRotation}</p>\r\n          </div>\r\n          <div className=\"col-xl-12\">\r\n            {this.props.Turret.WeaponList.map(this.showWeapon)}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  showWeapon = (x, i) => {\r\n    return (\r\n      <div className=\"card\" key={i}>\r\n        <div className=\"row card-header\">\r\n          <div className=\"col-xl\">{x.Ammunition.AmmoDescriptor}</div>\r\n          <div className=\"col-xl\">Power: {x.Power_ForInterface}</div>\r\n          <div className=\"col-xl\">\r\n            Has stabilizer: {parseBool(x.TirEnMouvement)}\r\n          </div>\r\n        </div>\r\n        <Ammo x={x.Ammunition} />\r\n      </div>\r\n    );\r\n  };\r\n}\r\n\r\nexport default Turret;\r\n","import React, { PureComponent } from \"react\";\r\nimport { parseAlias, parsePhase, parsePicture } from \"../js/parsers\";\r\nimport {\r\n  DisplayAP,\r\n  DisplayAV,\r\n  DisplayExp,\r\n  DisplayPara,\r\n  DisplaySpecial\r\n} from \"../DisplayComponents\";\r\n\r\nclass DetailUnitHeader extends PureComponent {\r\n  addUnit = () => {\r\n    this.props.fadd(this.props.Pack);\r\n  };\r\n  hideUnit = () => {\r\n    this.props.fhide(this.props.Pack);\r\n  };\r\n\r\n  render() {\r\n    let Unit = this.props.Unit;\r\n    return (\r\n      <div className=\"row card-header\">\r\n        <div className=\"col-xl-3\">\r\n          <img\r\n            src={parsePicture(this.props.Unit, \"bg\")}\r\n            className=\"img-big\"\r\n            alt=\"unitPortrait\"\r\n          />\r\n        </div>\r\n        <div className=\"col-xl-3\">\r\n          <h3>{parseAlias(this.props.Unit)}</h3>\r\n        </div>\r\n        <div className=\"col-xl-2\">\r\n          <DisplayExp\r\n            Experiencelevel={this.props.Pack.Experiencelevel}\r\n            css=\"img-xp\"\r\n          />\r\n          <DisplayAP AP={Unit.APValue} css=\"img-xp\" />\r\n          <DisplayAV AV={Unit.PlatingValue} css=\"img-xp\" />\r\n          <DisplayPara IsParachutist={this.props.Unit.IsParachutist} />\r\n          <DisplaySpecial\r\n            Spec={this.props.Unit.SpecialtyTexture}\r\n            css=\"img-xp\"\r\n          />\r\n          <h6>Phase: {parsePhase(this.props.Pack.AvailableFromPhase)}</h6>\r\n        </div>\r\n        <div className=\"col-xl-2\">\r\n          <h4>{this.props.Pack.PackAvailabilty} cards,</h4>\r\n          <h4>{this.props.Pack.UnitsPerPack} units</h4>\r\n        </div>\r\n        <div className=\"col-xl-2\">\r\n          <button className=\"btn btn-dark btn-block\" onClick={this.addUnit}>\r\n            <h4>Add</h4>\r\n          </button>\r\n          <button className=\"btn btn-block btn-danger\" onClick={this.hideUnit}>\r\n            <h4>X</h4>\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DetailUnitHeader;\r\n","import React, { PureComponent } from \"react\";\r\nimport TurretHeader from \"./TurretHeader\";\r\nimport {\r\n  parseArmor,\r\n  parseTopArmor,\r\n  parseSpeed,\r\n  parseTransport\r\n} from \"../js/parsers\";\r\n\r\nclass UnitModuleSimple extends PureComponent {\r\n  parseOffmapSimple = x => {\r\n    if (x === null) {\r\n      return <div />;\r\n    } else {\r\n      return <TurretHeader Turret={x.Turrets[0]} Salves={x.Salves} />;\r\n    }\r\n  };\r\n  render() {\r\n    let x = this.props.x;\r\n    let Dogfight;\r\n    if (x.AgilityRadius === null) {\r\n      Dogfight = \"n/a\";\r\n    } else {\r\n      Dogfight =\r\n        x.AgilityRadius.replace(\") * Metre)\", \"\").replace(\"((\", \"\") / 2;\r\n    }\r\n    if (x.WeaponsDescriptor != null) {\r\n      return (\r\n        <React.Fragment>\r\n          <div className=\"row\">\r\n            <div className=\"col-xl\">\r\n              <ul>\r\n                <li>\r\n                  Front:{\" \"}\r\n                  {parseArmor(\r\n                    x.DamageDescriptor.BlindageProperties.ArmorDescriptorFront\r\n                  )}\r\n                </li>\r\n                <li>\r\n                  Side:{\" \"}\r\n                  {parseArmor(\r\n                    x.DamageDescriptor.BlindageProperties.ArmorDescriptorSides\r\n                  )}\r\n                </li>\r\n                <li>\r\n                  Back:{\" \"}\r\n                  {parseArmor(\r\n                    x.DamageDescriptor.BlindageProperties.ArmorDescriptorRear\r\n                  )}\r\n                </li>\r\n                <li> Top: {parseTopArmor(x.TagSet)}</li>\r\n              </ul>\r\n            </div>\r\n            <div className=\"col-xl\">\r\n              <ul>\r\n                <li> MaxDamages: {x.MaxDamages} </li>\r\n                <li>\r\n                  Speed/Road Speed:\r\n                  {parseSpeed(x)}\r\n                </li>\r\n                <li> Stealth: {x.UnitConcealmentBonus}</li>\r\n                <li> Optics: {x.OpticalStrength}</li>\r\n              </ul>\r\n            </div>\r\n            <div className=\"col-xl\">\r\n              <ul>\r\n                <li> Can transport: {parseTransport(x.NbSeatsAvailable)} </li>\r\n                <li> Needs transport: {parseTransport(x.NbSeatsOccupied)}</li>\r\n                <li> Supply: {x.SupplyCapacity} </li>\r\n                <li>\r\n                  Dogfight radius:\r\n                  {Dogfight}\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n          <div>\r\n            {x.WeaponsDescriptor.Turrets.map((arg, i) => (\r\n              <TurretHeader\r\n                Turret={arg}\r\n                Salves={x.WeaponsDescriptor.Salves}\r\n                key={i}\r\n              />\r\n            ))}\r\n          </div>\r\n          <div>{this.parseOffmapSimple(x.Offmap)}</div>\r\n        </React.Fragment>\r\n      );\r\n    } else {\r\n      return (\r\n        <React.Fragment>\r\n          <div className=\"row\">\r\n            <div className=\"col-xl\">\r\n              <ul>\r\n                <li>\r\n                  Front:{\" \"}\r\n                  {parseArmor(\r\n                    x.DamageDescriptor.BlindageProperties.ArmorDescriptorFront\r\n                  )}\r\n                </li>\r\n                <li>\r\n                  Side:{\" \"}\r\n                  {parseArmor(\r\n                    x.DamageDescriptor.BlindageProperties.ArmorDescriptorSides\r\n                  )}\r\n                </li>\r\n                <li>\r\n                  Back:{\" \"}\r\n                  {parseArmor(\r\n                    x.DamageDescriptor.BlindageProperties.ArmorDescriptorRear\r\n                  )}\r\n                </li>\r\n                <li> Top: {parseTopArmor(x.TagSet)}</li>\r\n              </ul>\r\n            </div>\r\n            <div className=\"col-xl\">\r\n              <ul>\r\n                <li> MaxDamages: {x.MaxDamages} </li>\r\n                <li>\r\n                  Speed/Road Speed:\r\n                  {parseSpeed(x)}\r\n                </li>\r\n                <li> Stealth: {x.UnitConcealmentBonus}</li>\r\n                <li> Optics: {x.OpticalStrength}</li>\r\n              </ul>\r\n            </div>\r\n            <div className=\"col-xl\">\r\n              <ul>\r\n                <li> Can transport: {parseTransport(x.NbSeatsAvailable)} </li>\r\n                <li> Needs transport: {parseTransport(x.NbSeatsOccupied)}</li>\r\n                <li> Supply: {x.SupplyCapacity} </li>\r\n                <li>\r\n                  Dogfight radius:\r\n                  {Dogfight}\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n          <div />\r\n          <div>{this.parseOffmapSimple(x.Offmap)}</div>\r\n        </React.Fragment>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nexport default UnitModuleSimple;\r\n","import React, { PureComponent } from \"react\";\r\n\r\nclass UnitModuleRecon extends PureComponent {\r\n  render() {\r\n    let x = this.props.x;\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"row\">\r\n          <div className=\"col-xl\">\r\n            <ul>\r\n              <li>IdentifyBaseProbability: {x.IdentifyBaseProbability}</li>\r\n              <li>VisionObstructionType: {x.VisionObstructionType}</li>\r\n              <li>VisionUnitType: {x.VisionUnitType}</li>\r\n            </ul>\r\n          </div>\r\n          <div className=\"col-xl\">\r\n            <ul>\r\n              <li>\r\n                TimeBetweenEachIdentifyRoll: {x.TimeBetweenEachIdentifyRoll}\r\n              </li>\r\n              <li> UnitConcealmentBonus: {x.UnitConcealmentBonus}</li>\r\n              <li> OpticalStrength: {x.OpticalStrength}</li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n        <div className=\"row\">\r\n          <GunNoiseParser x={this.props.x.WeaponsDescriptor} />\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nclass GunNoiseParser extends PureComponent {\r\n  render() {\r\n    let x = this.props.x;\r\n    if (x === null) {\r\n      return <div />;\r\n    }\r\n    return x.Turrets.map((x, i) => {\r\n      return (\r\n        <div className=\"col-xl\" key={i}>\r\n          <h6>Gun Noise Malus:</h6>\r\n          {x.WeaponList.map((x, i) => {\r\n            return (\r\n              <ul key={i}>\r\n                <li>{x.Ammunition.AmmoDescriptor.replace(\"Ammo_\", \"\")}:</li>\r\n                <li>{x.Ammunition.NoiseDissimulationMalus}</li>\r\n              </ul>\r\n            );\r\n          })}\r\n        </div>\r\n      );\r\n    });\r\n  }\r\n}\r\n\r\nexport default UnitModuleRecon;\r\n","import React, { PureComponent } from \"react\";\r\nimport { parseBool, parseSpeed } from \"../js/parsers\";\r\n\r\nclass UnitModuleMobility extends PureComponent {\r\n  render() {\r\n    let x = this.props.x;\r\n    if (x.VitesseCombat === null) {\r\n      return (\r\n        <div className=\"row\">\r\n          <div className=\"col-xl\">\r\n            <ul>\r\n              <li>\r\n                Speed/Road Speed:\r\n                {parseSpeed(x)}\r\n              </li>\r\n              <li>\r\n                Combat Speed:{\" \"}\r\n                {x.AirVitesseCombat.replace(\"(\", \"\").replace(\") * Metre)\", \"\")}\r\n              </li>\r\n            </ul>\r\n          </div>\r\n          <div className=\"col-xl\">\r\n            <ul>\r\n              <li>FuelCapacity: {x.FuelCapacity}</li>\r\n              <li>FuelMoveDuration: {x.FuelMoveDuration}</li>\r\n            </ul>\r\n          </div>\r\n          <div className=\"col-xl\">\r\n            <ul>\r\n              <li>Turn-Around time: {x.TempsDemiTour} s</li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n    return (\r\n      <div className=\"row\">\r\n        <div className=\"col-xl\">\r\n          <ul>\r\n            <li>\r\n              Speed/Road Speed:\r\n              {parseSpeed(x)}\r\n            </li>\r\n            <li>Combat Speed: {x.VitesseCombat.replace(\"(\", \"\")}</li>\r\n            <li>MaxAcceleration: {x.MaxAcceleration.replace(\"(\", \"\")}</li>\r\n            <li>MaxDeceleration: {x.MaxDeceleration.replace(\"(\", \"\")}</li>\r\n            <li>UnitMovingType: {x.UnitMovingType}</li>\r\n          </ul>\r\n        </div>\r\n        <div className=\"col-xl\">\r\n          <ul>\r\n            <li>FuelCapacity: {x.FuelCapacity}</li>\r\n            <li>FuelMoveDuration: {x.FuelMoveDuration}</li>\r\n            <li>\r\n              PathfindType: {x.PathfindType.replace(\"PathfindTypes/\", \"\")}\r\n            </li>\r\n            <li>IsTransporter: {parseBool(x.IsTransporter)}</li>\r\n            <li>isTowable: {parseBool(x.isTowable)}</li>\r\n          </ul>\r\n        </div>\r\n        <div className=\"col-xl\">\r\n          <ul>\r\n            <li>StartTime: {x.StartTime.replace(\"* Seconde\", \"s\")}</li>\r\n            <li>StopTime: {x.StopTime.replace(\"* Seconde\", \"s\")}</li>\r\n            <li>\r\n              RotationStartTime: {x.RotationStartTime.replace(\"* Seconde\", \"s\")}\r\n            </li>\r\n            <li>\r\n              RotationStopTime: {x.RotationStopTime.replace(\"* Seconde\", \"s\")}\r\n            </li>\r\n            <li>Turn-Around time: {x.TempsDemiTour} s</li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default UnitModuleMobility;\r\n","import React, { PureComponent } from \"react\";\r\nimport { parseBool } from \"../js/parsers\";\r\n\r\nclass UnitModuleSurvivability extends PureComponent {\r\n  render() {\r\n    let x = this.props.x;\r\n    return (\r\n      <div className=\"row\">\r\n        <div className=\"col-xl\">\r\n          <ul>\r\n            <li>DefaultAutoCover: {parseBool(x.DefaultAutoCover)}</li>\r\n            <li>MoralLevel: {x.MoralLevel}</li>\r\n            <li>Orient front: {parseBool(x.AlwaysOrientArmorTowardsThreat)}</li>\r\n            <li>\r\n              StunFreezesUnits: {parseBool(x.DamageDescriptor.StunFreezesUnits)}\r\n            </li>\r\n          </ul>\r\n        </div>\r\n        <div className=\"col-xl\">\r\n          <ul>\r\n            <li>\r\n              StunDamagesRegen:{\" \"}\r\n              {x.DamageDescriptor.StunDamagesRegen.replace(\r\n                \"_StunDamagesRegen\",\r\n                \"\"\r\n              )}\r\n            </li>\r\n            <li>\r\n              StunDamagesToGetStunned:{\" \"}\r\n              {x.DamageDescriptor.StunDamagesToGetStunned.replace(\r\n                \"_StunDamagesToGetStunned\",\r\n                \"\"\r\n              )}\r\n            </li>\r\n            <li>\r\n              MaxSuppressionDamages:{\" \"}\r\n              {x.DamageDescriptor.MaxSuppressionDamages.replace(\r\n                \"_MaxSuppressionDamages\",\r\n                \"\"\r\n              )}\r\n            </li>\r\n            <li>\r\n              TypeForGroundDamageModifier: {x.TypeForGroundDamageModifier}\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default UnitModuleSurvivability;\r\n","import React, { PureComponent } from \"react\";\r\nimport { parseBool } from \"../js/parsers\";\r\n\r\nclass UnitModuleAux extends PureComponent {\r\n  render() {\r\n    let x = this.props.x;\r\n    let NbSoldatInGroupeCombat;\r\n    if (x.Behaviour !== null) {\r\n      NbSoldatInGroupeCombat = x.Behaviour.NbSoldatInGroupeCombat;\r\n    } else {\r\n      NbSoldatInGroupeCombat = \"N/A\";\r\n    }\r\n    return (\r\n      <div className=\"row\">\r\n        <div className=\"col-xl\">\r\n          <ul>\r\n            <li>IsSapery: {parseBool(x.IsSapery)}</li>\r\n            <li>Soldiers in squad: {NbSoldatInGroupeCombat}</li>\r\n            <li>ProductionYear: {x.ProductionYear}</li>\r\n            <li>ProductionTime: {x.ProductionTime}</li>\r\n            <li>Dangerousness: {x.Dangerousness}</li>\r\n          </ul>\r\n        </div>\r\n        <div className=\"col-xl\">\r\n          <ul>\r\n            <li>StrengthDecayPerSecond: {x.StrengthDecayPerSecond}</li>\r\n            <li>PreventsDecayInZone: {parseBool(x.PreventsDecayInZone)}</li>\r\n            <li>CircleFormation: {parseBool(x.CircleFormation)}</li>\r\n            <li>InfluenceStrength: {x.InfluenceStrength}</li>\r\n            <li>MinimumInfluenceStrength: {x.MinimumInfluenceStrength}</li>\r\n          </ul>\r\n        </div>\r\n        <ul>\r\n          <li>\r\n            Tags:\r\n            {x.TagSet.map(x => {\r\n              return x + \", \";\r\n            })}\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default UnitModuleAux;\r\n","import React, { PureComponent } from \"react\";\r\n\r\nclass UnitModuleAir extends PureComponent {\r\n  render() {\r\n    let x = this.props.x;\r\n    if (x.AirMaxspeed === null) {\r\n      return <div />;\r\n    }\r\n    return (\r\n      <div className=\"card\">\r\n        <div className=\"card-header\"> Air Data </div>\r\n        <div className=\"row card-body\">\r\n          <div className=\"col-xl\">\r\n            <ul>\r\n              <li>\r\n                AirMaxspeed:{\" \"}\r\n                {x.AirMaxspeed.replace(\") * Metre)\", \"\").replace(\"((\", \"\") / 2}\r\n              </li>\r\n              <li>\r\n                Altitude:{\" \"}\r\n                {x.Altitude.replace(\") * Metre)\", \"\").replace(\"((\", \"\") / 2}\r\n              </li>\r\n              <li>\r\n                AltitudeMin:{\" \"}\r\n                {x.AltitudeMin.replace(\" * Metre)\", \"\").replace(\"(\", \"\") / 2}\r\n              </li>\r\n              <li>\r\n                Speed: {x.Speed.replace(\") * Metre)\", \"\").replace(\"((\", \"\") / 2}\r\n              </li>\r\n              <li>\r\n                Dogfight radius:{\" \"}\r\n                {x.AgilityRadius.replace(\") * Metre)\", \"\").replace(\"((\", \"\") /\r\n                  2}\r\n              </li>\r\n            </ul>\r\n          </div>\r\n          <div className=\"col-xl\">\r\n            <ul>\r\n              <li>PitchAngle: {x.PitchAngle}</li>\r\n              <li>RollAngle: {x.RollAngle}</li>\r\n              <li>RollSpeed: {x.RollSpeed}</li>\r\n              <li>EvacAngle: {x.EvacAngle}</li>\r\n              <li>PlaneEvacuationTime: {x.PlaneEvacuationTime}</li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default UnitModuleAir;\r\n","import React, { PureComponent } from \"react\";\r\nimport Turret from \"./Turret\";\r\nimport DetailUnitHeader from \"./DetailUnitHeader\";\r\nimport { Tab, Tabs, TabList, TabPanel } from \"react-tabs\";\r\nimport \"react-tabs/style/react-tabs.css\";\r\nimport Ammo from \"./Ammo\";\r\nimport { parseBool } from \"../js/parsers\";\r\nimport UnitModuleSimple from \"./UnitModuleSimple\";\r\nimport UnitModuleRecon from \"./UnitModuleRecon\";\r\nimport UnitModuleMobility from \"./UnitModuleMobility\";\r\nimport UnitModuleSurvivability from \"./UnitModuleSurvivability\";\r\nimport UnitModuleAux from \"./UnitModuleAux\";\r\nimport UnitModuleAir from \"./UntiModuleAir\";\r\n\r\nclass UnitModules extends PureComponent {\r\n  parseOffmap = x => {\r\n    if (x === null) {\r\n      return <div />;\r\n    } else {\r\n      return <Turret Turret={x.Turrets[0]} Salves={x.Salves} />;\r\n    }\r\n  };\r\n\r\n  showWeapon = (x, i) => {\r\n    return (\r\n      <div className=\"card\" key={i}>\r\n        <div className=\"card-header\">{x.Ammunition}</div>\r\n        <div className=\"row card-body\">\r\n          <div className=\"col-xl\">\r\n            <p>Power: {x.Power_ForInterface}</p>\r\n          </div>\r\n          <div className=\"col-xl\">\r\n            <p>SalvoStockIndex: {x.SalvoStockIndex}</p>\r\n          </div>\r\n          <div className=\"col-xl\">\r\n            <p>\r\n              SalvoStockIndex_ForInterface: {x.SalvoStockIndex_ForInterface}\r\n            </p>\r\n          </div>\r\n          <div className=\"col-xl\">\r\n            <p>TirEnMouvement: {parseBool(x.TirEnMouvement)}</p>\r\n          </div>\r\n        </div>\r\n        <Ammo x={x.Ammo} />\r\n      </div>\r\n    );\r\n  };\r\n  render() {\r\n    if (this.props.Unit != null) {\r\n      if (this.props.Unit.WeaponsDescriptor != null) {\r\n        return (\r\n          <Tabs className=\"card\">\r\n            <TabList className=\"card-header\">\r\n              <Tab>Simple</Tab>\r\n              <Tab>Recon</Tab>\r\n              <Tab>Mobility</Tab>\r\n              <Tab>Survivability</Tab>\r\n              <Tab>Aux</Tab>\r\n              <Tab>Air Data</Tab>\r\n              <Tab>Weapons</Tab>\r\n            </TabList>\r\n            <TabPanel>\r\n              <div>\r\n                <UnitModuleSimple x={this.props.Unit} />\r\n              </div>\r\n            </TabPanel>\r\n            <TabPanel>\r\n              <div>\r\n                <UnitModuleRecon x={this.props.Unit} />\r\n              </div>\r\n            </TabPanel>\r\n            <TabPanel>\r\n              <div>\r\n                <UnitModuleMobility x={this.props.Unit} />\r\n              </div>\r\n            </TabPanel>\r\n            <TabPanel>\r\n              <div>\r\n                <UnitModuleSurvivability x={this.props.Unit} />\r\n              </div>\r\n            </TabPanel>\r\n            <TabPanel>\r\n              <div>\r\n                <UnitModuleAux x={this.props.Unit} />\r\n              </div>\r\n            </TabPanel>\r\n            <TabPanel>\r\n              <div>\r\n                <UnitModuleAir x={this.props.Unit} />\r\n              </div>\r\n            </TabPanel>\r\n            <TabPanel>\r\n              <div className=\"card\">\r\n                {this.props.Unit.WeaponsDescriptor.Turrets.map((x, i) => {\r\n                  return (\r\n                    <Turret\r\n                      Turret={x}\r\n                      Salves={this.props.Unit.WeaponsDescriptor.Salves}\r\n                      key={i}\r\n                    />\r\n                  );\r\n                })}\r\n              </div>\r\n              <div>{this.parseOffmap(this.props.Unit.Offmap)}</div>\r\n            </TabPanel>\r\n          </Tabs>\r\n        );\r\n      } else {\r\n        return (\r\n          <Tabs className=\"card\">\r\n            <TabList className=\"card-header\">\r\n              <Tab>Simple</Tab>\r\n              <Tab>Recon</Tab>\r\n              <Tab>Mobility</Tab>\r\n              <Tab>Survivability</Tab>\r\n              <Tab>Aux</Tab>\r\n              <Tab>Air Data</Tab>\r\n              <Tab>Weapons</Tab>\r\n            </TabList>\r\n            <TabPanel>\r\n              <div>\r\n                <UnitModuleSimple x={this.props.Unit} />\r\n              </div>\r\n            </TabPanel>\r\n            <TabPanel>\r\n              <div>\r\n                <UnitModuleRecon x={this.props.Unit} />\r\n              </div>\r\n            </TabPanel>\r\n            <TabPanel>\r\n              <div>\r\n                <UnitModuleMobility x={this.props.Unit} />\r\n              </div>\r\n            </TabPanel>\r\n            <TabPanel>\r\n              <div>\r\n                <UnitModuleSurvivability x={this.props.Unit} />\r\n              </div>\r\n            </TabPanel>\r\n            <TabPanel>\r\n              <div>\r\n                <UnitModuleAux x={this.props.Unit} />\r\n              </div>\r\n            </TabPanel>\r\n            <TabPanel>\r\n              <div>\r\n                <UnitModuleAir x={this.props.Unit} />\r\n              </div>\r\n            </TabPanel>\r\n            <TabPanel>\r\n              <div className=\"card\" />\r\n              <div>{this.parseOffmap(this.props.Unit.Offmap)}</div>\r\n            </TabPanel>\r\n          </Tabs>\r\n        );\r\n      }\r\n    }\r\n    return <div />;\r\n  }\r\n}\r\n\r\nclass UnitData extends PureComponent {\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <DetailUnitHeader\r\n          Pack={this.props.Pack}\r\n          Unit={this.props.Unit}\r\n          fadd={this.props.fadd}\r\n          fhide={this.props.fhide}\r\n        />\r\n        <UnitModules Unit={this.props.Unit} />\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default UnitData;\r\n","import React, { Component } from \"react\";\r\nimport UnitData from \"./UnitModules\";\r\nimport { Tab, Tabs, TabList, TabPanel } from \"react-tabs\";\r\nimport \"react-tabs/style/react-tabs.css\";\r\n\r\nclass Pack extends Component {\r\n  render() {\r\n    if (this.props.Pack.TransportUnit === null) {\r\n      return (\r\n        //unfortunately, all Tabs components\r\n        // have to be returned as a single piece,\r\n        //so, no modularity there\r\n        <React.Fragment>\r\n          <Tabs className=\"card\">\r\n            <TabList>\r\n              <Tab>Unit</Tab>\r\n            </TabList>\r\n            <TabPanel>\r\n              <UnitData\r\n                Pack={this.props.Pack}\r\n                Unit={this.props.Pack.Unit}\r\n                fadd={this.props.fadd}\r\n                fhide={this.props.fhide}\r\n              />\r\n            </TabPanel>\r\n          </Tabs>\r\n        </React.Fragment>\r\n      );\r\n    } else {\r\n      return (\r\n        <React.Fragment>\r\n          <Tabs className=\"card\">\r\n            <TabList>\r\n              <Tab>Unit</Tab>\r\n              <Tab>Transport</Tab>\r\n            </TabList>\r\n            <TabPanel>\r\n              <UnitData\r\n                Pack={this.props.Pack}\r\n                Unit={this.props.Pack.Unit}\r\n                fadd={this.props.fadd}\r\n                fhide={this.props.fhide}\r\n              />\r\n            </TabPanel>\r\n            <TabPanel>\r\n              <UnitData\r\n                Pack={this.props.Pack}\r\n                Unit={this.props.Pack.TransportUnit}\r\n                fadd={this.props.fadd}\r\n                fhide={this.props.fhide}\r\n              />\r\n            </TabPanel>\r\n          </Tabs>\r\n        </React.Fragment>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nclass RightPanel extends Component {\r\n  showPack = (x, i) => {\r\n    return (\r\n      <Pack\r\n        key={i}\r\n        Pack={x}\r\n        fadd={this.props.Honey.DeckBuilder.API.addUnit}\r\n        fshow={this.props.Honey.DeckBuilder.API.showUnit}\r\n        fhide={this.props.Honey.DeckBuilder.API.hideUnit}\r\n      />\r\n    );\r\n  };\r\n  render() {\r\n    if (this.props.Honey.DeckBuilder.UnitsToDisplay.length === 0) {\r\n      return <div />;\r\n    } else {\r\n      return (\r\n        <React.Fragment>\r\n          {this.props.Honey.DeckBuilder.UnitsToDisplay.map(this.showPack)}\r\n        </React.Fragment>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nexport default RightPanel;\r\n","import React, { Component } from \"react\";\r\nimport { parseAlias } from \"./js/parsers\";\r\n\r\nclass UnitName extends Component {\r\n  render() {\r\n    let x = this.props.x;\r\n    if (this.props.fValid(this.props.x)) {\r\n      if (this.props.x.TransportUnit === null) {\r\n        return (\r\n          <p>\r\n            {\" \"}\r\n            {parseAlias(x.Unit)} {this.props.fCount(x)}/{x.PackAvailabilty}{\" \"}\r\n          </p>\r\n        );\r\n      }\r\n      return (\r\n        <React.Fragment>\r\n          <p>\r\n            {\" \"}\r\n            {x.Unit.AliasName} {this.props.fCount(x)}/{x.PackAvailabilty}{\" \"}\r\n          </p>\r\n          <p> {x.TransportUnit.AliasName}</p>\r\n        </React.Fragment>\r\n      );\r\n    } else {\r\n      if (this.props.x.TransportUnit === null) {\r\n        return (\r\n          <p className=\"p-err\">\r\n            {\" \"}\r\n            {parseAlias(x.Unit)} {this.props.fCount(x)}/{x.PackAvailabilty}{\" \"}\r\n          </p>\r\n        );\r\n      }\r\n      return (\r\n        <React.Fragment>\r\n          <p className=\"p-err\">\r\n            {\" \"}\r\n            {x.Unit.AliasName} {this.props.fCount(x)}/{x.PackAvailabilty}{\" \"}\r\n          </p>\r\n          <p className=\"p-err\">{x.TransportUnit.AliasName}</p>\r\n        </React.Fragment>\r\n      );\r\n    }\r\n  }\r\n}\r\nexport default UnitName;\r\n","import React, { Component } from \"react\";\r\nimport { parsePhase, parsePicture } from \"../js/parsers\";\r\nimport {\r\n  DisplayAP,\r\n  DisplayAV,\r\n  DisplaySpecial,\r\n  DisplayExp\r\n} from \"../DisplayComponents\";\r\nimport UnitName from \"../UnitName\";\r\n\r\nclass CardDisplay extends Component {\r\n  deleteUnit = () => {\r\n    this.props.fdel(this.props.x);\r\n  };\r\n\r\n  drawUnit = () => {\r\n    this.props.fshow(this.props.x);\r\n  };\r\n  parsePrice = () => {\r\n    if (this.props.x.TransportUnit === null) {\r\n      return this.props.x.Unit.ProductionPrice;\r\n    }\r\n    return (\r\n      this.props.x.Unit.ProductionPrice +\r\n      this.props.x.TransportUnit.ProductionPrice\r\n    );\r\n  };\r\n  parseName = x => {\r\n    if (x.TransportUnit === null) {\r\n      return (\r\n        x.Unit.AliasName + \" \" + this.props.fCount(x) + \"/\" + x.PackAvailabilty\r\n      );\r\n    } else {\r\n      return (\r\n        x.Unit.AliasName + \" \" + this.props.fCount(x) + \"/\" + x.PackAvailabilty\r\n      );\r\n    }\r\n  };\r\n  parseValidity = x => {\r\n    if (this.props.fValid(x)) {\r\n      return \"\";\r\n    } else {\r\n      return \"p-err\";\r\n    }\r\n  };\r\n  parsePrice = (x, y) => {\r\n    if (y === null) {\r\n      return Number(x.ProductionPrice);\r\n    }\r\n    return Number(x.ProductionPrice) + Number(y.ProductionPrice);\r\n  };\r\n\r\n  render() {\r\n    let Unit = this.props.x.Unit;\r\n    let TransportUnit = this.props.x.TransportUnit;\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"div-rel\">\r\n          <img\r\n            src={parsePicture(Unit, \"md\")}\r\n            className=\"img-back\"\r\n            alt=\"unitPortrait\"\r\n            onClick={this.drawUnit}\r\n          />\r\n          <h5 className=\"txt-price\">{this.parsePrice(Unit, TransportUnit)}</h5>\r\n          <h5 className=\"txt-avail\">{this.props.x.UnitsPerPack}</h5>\r\n          <h5 className=\"txt-phase\">\r\n            {parsePhase(this.props.x.AvailableFromPhase)}\r\n          </h5>\r\n          <DisplayExp\r\n            Experiencelevel={this.props.x.Experiencelevel}\r\n            css=\"img-rel-xp\"\r\n          />\r\n          <DisplaySpecial Spec={Unit.SpecialtyTexture} css=\"img-rel-spec\" />\r\n          <DisplayAP AP={Unit.APValue} css=\"img-rel-ap\" />\r\n          <DisplayAV AV={Unit.PlatingValue} css=\"img-rel-ap\" />\r\n        </div>\r\n        <UnitName\r\n          x={this.props.x}\r\n          fValid={this.props.fValid}\r\n          fCount={this.props.fCount}\r\n        />\r\n        <button type=\"button\" onClick={this.deleteUnit} className=\"btn btn-sm\">\r\n          <p>DELETE</p>\r\n        </button>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nclass CardDisplayRow extends Component {\r\n  showCard = (x, i) => {\r\n    if (typeof x.Descriptor === \"undefined\") {\r\n      return (\r\n        <div className=\"col-xl-1 col-xl-10\" key={i}>\r\n          <h3 key={i}> {x} </h3>\r\n        </div>\r\n      );\r\n    }\r\n    return (\r\n      <div className=\"col-xl-1 col-xl-10\" key={i}>\r\n        <CardDisplay\r\n          DB={this.props.DB}\r\n          x={x}\r\n          fshow={this.props.f.showUnit}\r\n          fdel={this.props.f.deleteUnit}\r\n          fValid={this.props.f.isValid}\r\n          fCount={this.props.f.getUsedCount}\r\n        />\r\n      </div>\r\n    );\r\n  };\r\n\r\n  render() {\r\n    return <div className=\"row\">{this.props.Parsed.map(this.showCard)}</div>;\r\n  }\r\n}\r\n\r\nexport default CardDisplayRow;\r\n","import React, { PureComponent } from \"react\";\r\nimport CardDisplayRow from \"./CardDisplay\";\r\n\r\nclass DeckGrid extends PureComponent {\r\n  render() {\r\n    return (\r\n      <div className=\"card-body\">\r\n        <CardDisplayRow\r\n          DB={this.props.DB}\r\n          Parsed={this.props.DeckUnits[0]}\r\n          f={this.props.f}\r\n        />\r\n        <CardDisplayRow\r\n          DB={this.props.DB}\r\n          Parsed={this.props.DeckUnits[1]}\r\n          f={this.props.f}\r\n        />\r\n        <CardDisplayRow\r\n          DB={this.props.DB}\r\n          Parsed={this.props.DeckUnits[2]}\r\n          f={this.props.f}\r\n        />\r\n        <CardDisplayRow\r\n          DB={this.props.DB}\r\n          Parsed={this.props.DeckUnits[3]}\r\n          f={this.props.f}\r\n        />\r\n        <CardDisplayRow\r\n          DB={this.props.DB}\r\n          Parsed={this.props.DeckUnits[4]}\r\n          f={this.props.f}\r\n        />\r\n        <CardDisplayRow\r\n          DB={this.props.DB}\r\n          Parsed={this.props.DeckUnits[5]}\r\n          f={this.props.f}\r\n        />\r\n        <CardDisplayRow\r\n          DB={this.props.DB}\r\n          Parsed={this.props.DeckUnits[6]}\r\n          f={this.props.f}\r\n        />\r\n        <CardDisplayRow\r\n          DB={this.props.DB}\r\n          Parsed={this.props.DeckUnits[7]}\r\n          f={this.props.f}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DeckGrid;\r\n","import React, { Component } from \"react\";\r\nimport { parsePhase, parseAlias, parsePicture } from \"../js/parsers\";\r\nimport {\r\n  DisplayAP,\r\n  DisplayAV,\r\n  DisplayExp,\r\n  DisplayPara,\r\n  DisplaySpecial\r\n} from \"../DisplayComponents\";\r\n\r\nclass UnitsInList extends Component {\r\n  makeUnitEntry = x => {\r\n    if (x.TransportUnit == null) {\r\n      let Unit = x.Unit;\r\n      return (\r\n        <tr key={x.EncodeInt} onClick={() => this.props.fshow(x)}>\r\n          <td>\r\n            <img\r\n              src={parsePicture(Unit, \"sm\")}\r\n              className=\"img-xp\"\r\n              alt=\"unitPortrait\"\r\n            />\r\n          </td>\r\n          <td>{parseAlias(Unit)}</td>\r\n          <td>{Unit.ProductionPrice}</td>\r\n          <td>{x.UnitsPerPack}</td>\r\n          <td>{x.PackAvailabilty}</td>\r\n          <td>{parsePhase(x.AvailableFromPhase)}</td>\r\n          <td>\r\n            <DisplayExp Experiencelevel={x.Experiencelevel} css=\"img-xp\" />\r\n          </td>\r\n          <td>\r\n            <DisplayAP AP={Unit.APValue} css=\"img-xp\" />\r\n          </td>\r\n          <td>\r\n            <DisplayAV AV={Unit.PlatingValue} css=\"img-xp\" />\r\n          </td>\r\n          <td>\r\n            <DisplayPara IsParachutist={Unit.IsParachutist} />\r\n          </td>\r\n          <td>\r\n            <DisplaySpecial Spec={Unit.SpecialtyTexture} css=\"img-xp\" />\r\n          </td>\r\n          <td />\r\n          <td />\r\n          <td />\r\n          <td />\r\n          <td />\r\n          <td />\r\n        </tr>\r\n      );\r\n    } else {\r\n      let Unit = x.Unit;\r\n      let TransportUnit = x.TransportUnit;\r\n      return (\r\n        <tr key={x.EncodeInt} onClick={() => this.props.fshow(x)}>\r\n          <td>\r\n            <img\r\n              src={parsePicture(Unit, \"sm\")}\r\n              className=\"img-xp\"\r\n              alt=\"unitPortrait\"\r\n            />\r\n          </td>\r\n          <td>{parseAlias(Unit)}</td>\r\n          <td>{Unit.ProductionPrice}</td>\r\n          <td>{x.UnitsPerPack}</td>\r\n          <td>{x.PackAvailabilty}</td>\r\n          <td>{parsePhase(x.AvailableFromPhase)}</td>\r\n          <td>\r\n            <DisplayExp Experiencelevel={x.Experiencelevel} css=\"img-xp\" />\r\n          </td>\r\n          <td>\r\n            <DisplayAP AP={Unit.APValue} css=\"img-xp\" />\r\n          </td>\r\n          <td>\r\n            <DisplayAV AV={Unit.PlatingValue} css=\"img-xp\" />\r\n          </td>\r\n          <td>\r\n            <DisplayPara IsParachutist={Unit.IsParachutist} />\r\n          </td>\r\n          <td>\r\n            <DisplaySpecial Spec={Unit.SpecialtyTexture} css=\"img-xp\" />\r\n          </td>\r\n          <td>{parseAlias(TransportUnit)}</td>\r\n          <td>{TransportUnit.ProductionPrice}</td>\r\n          <td>\r\n            <DisplayAP AP={Unit.APValue} css=\"img-xp\" />\r\n          </td>\r\n          <td>\r\n            <DisplayAV AV={Unit.PlatingValue} css=\"img-xp\" />\r\n          </td>\r\n          <td>\r\n            <DisplayPara IsParachutist={TransportUnit.IsParachutist} />\r\n          </td>\r\n          <td>\r\n            <DisplaySpecial\r\n              Spec={TransportUnit.SpecialtyTexture}\r\n              css=\"img-xp\"\r\n            />\r\n          </td>\r\n        </tr>\r\n      );\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <table className=\"sortable table-hover\" id=\"recTable\">\r\n        <tbody>\r\n          <tr>\r\n            <th />\r\n            <th onClick={() => this.props.fsort(1, \"AliasName\")}>Unit⇓</th>\r\n            <th onClick={() => this.props.fsort(1, \"ProductionPrice\")}>\r\n              Points⇓\r\n            </th>\r\n            <th onClick={() => this.props.fsort(0, \"UnitsPerPack\")}>Number⇓</th>\r\n            <th onClick={() => this.props.fsort(0, \"PackAvailabilty\")}>\r\n              Cards⇓\r\n            </th>\r\n            <th onClick={() => this.props.fsort(0, \"AvailableFromPhase\")}>\r\n              Phase⇓\r\n            </th>\r\n            <th onClick={() => this.props.fsort(0, \"Experiencelevel\")}>\r\n              Veterancy⇓\r\n            </th>\r\n            <th onClick={() => this.props.fsort(1, \"APValue\")}>AT⇓</th>\r\n            <th onClick={() => this.props.fsort(1, \"PlatingValue\")}>FAV⇓</th>\r\n            <th onClick={() => this.props.fsort(1, \"IsParachutist\")}>Para⇓</th>\r\n            <th onClick={() => this.props.fsort(1, \"SpecialtyTexture\")}>\r\n              Spec⇓\r\n            </th>\r\n            <th onClick={() => this.props.fsort(2, \"AliasName\")}>Transport⇓</th>\r\n            <th onClick={() => this.props.fsort(2, \"ProductionPrice\")}>\r\n              Points⇓\r\n            </th>\r\n            <th onClick={() => this.props.fsort(2, \"APValue\")}>AT⇓</th>\r\n            <th onClick={() => this.props.fsort(2, \"PlatingValue\")}>FAV⇓</th>\r\n            <th onClick={() => this.props.fsort(2, \"IsParachutist\")}>Para⇓</th>\r\n            <th onClick={() => this.props.fsort(2, \"SpecialtyTexture\")}>\r\n              Spec⇓\r\n            </th>\r\n          </tr>\r\n          {this.props.Units.map(this.makeUnitEntry)}\r\n        </tbody>\r\n      </table>\r\n    );\r\n  }\r\n}\r\n\r\nexport default UnitsInList;\r\n","import React, { Component } from \"react\";\r\nimport CardDisplayRow from \"./CardDisplay\";\r\nimport UnitListing from \"./UnitListing\";\r\n\r\nclass UnitPicker extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\" card-body\">\r\n        <CardDisplayRow\r\n          DB={this.props.DB}\r\n          Parsed={this.props.DeckUnits}\r\n          f={this.props.f}\r\n        />\r\n        <UnitListing\r\n          DB={this.props.DB}\r\n          Units={this.props.DBUnits}\r\n          fadd={this.props.f.addUnit}\r\n          fshow={this.props.f.showUnit}\r\n          fsort={this.props.f.sortBy}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default UnitPicker;\r\n","import React, { PureComponent } from \"react\";\r\nimport { Tab, Tabs, TabList, TabPanel } from \"react-tabs\";\r\n\r\n//actual division button\r\nclass Division extends PureComponent {\r\n  getPicture = () => {\r\n    let img = \"img/d/\" + this.props.x.EmblemTexture.toLowerCase() + \".tgv.png\";\r\n    return img;\r\n  };\r\n\r\n  setDeck = () => {\r\n    this.props.fset(this.props.x);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <button className=\"btn\" onClick={this.setDeck}>\r\n        <img src={this.getPicture()} className=\"img-back\" alt=\"unitPortrait\" />\r\n      </button>\r\n    );\r\n  }\r\n}\r\n\r\n//division tab\r\nclass DivisionsSelector extends PureComponent {\r\n  makeButton = (x, i) => {\r\n    return (\r\n      <div className=\"col-xl-3\" key={i}>\r\n        <Division x={x} fset={this.props.fset} />\r\n      </div>\r\n    );\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"row card-body\">\r\n          <div className=\"col-xl\">\r\n            <Tabs>\r\n              <TabList>\r\n                <Tab>Skirmish</Tab>\r\n                <Tab>Attack</Tab>\r\n                <Tab>Defence</Tab>\r\n              </TabList>\r\n              <TabPanel>\r\n                <div className=\"row\">\r\n                  {this.props.DB.filter(x => {\r\n                    return x.DivisionNationalite === \"Allied\";\r\n                  })\r\n                    .filter(x => {\r\n                      return x.DivisionTags.includes(\"DEFAULT\");\r\n                    })\r\n                    .map(this.makeButton)}\r\n                </div>\r\n              </TabPanel>\r\n              <TabPanel>\r\n                <div className=\"row\">\r\n                  {this.props.DB.filter(x => {\r\n                    return x.DivisionNationalite === \"Allied\";\r\n                  })\r\n                    .filter(x => {\r\n                      return x.DivisionTags.includes(\"Attacker\");\r\n                    })\r\n                    .map(this.makeButton)}\r\n                </div>\r\n              </TabPanel>\r\n              <TabPanel>\r\n                <div className=\"row\">\r\n                  {this.props.DB.filter(x => {\r\n                    return x.DivisionNationalite === \"Allied\";\r\n                  })\r\n                    .filter(x => {\r\n                      return x.DivisionTags.includes(\"Defender\");\r\n                    })\r\n                    .map(this.makeButton)}\r\n                </div>\r\n              </TabPanel>\r\n            </Tabs>\r\n          </div>\r\n          <div className=\"col-xl\">\r\n            <Tabs>\r\n              <TabList>\r\n                <Tab>Skirmish</Tab>\r\n                <Tab>Attack</Tab>\r\n                <Tab>Defence</Tab>\r\n              </TabList>\r\n              <TabPanel>\r\n                <div className=\"row\">\r\n                  {this.props.DB.filter(x => {\r\n                    return x.DivisionNationalite === \"Axis\";\r\n                  })\r\n                    .filter(x => {\r\n                      return x.DivisionTags.includes(\"DEFAULT\");\r\n                    })\r\n                    .map(this.makeButton)}\r\n                </div>\r\n              </TabPanel>\r\n              <TabPanel>\r\n                <div className=\"row\">\r\n                  {this.props.DB.filter(x => {\r\n                    return x.DivisionNationalite === \"Axis\";\r\n                  })\r\n                    .filter(x => {\r\n                      return x.DivisionTags.includes(\"Attacker\");\r\n                    })\r\n                    .map(this.makeButton)}\r\n                </div>\r\n              </TabPanel>\r\n              <TabPanel>\r\n                <div className=\"row\">\r\n                  {this.props.DB.filter(x => {\r\n                    return x.DivisionNationalite === \"Axis\";\r\n                  })\r\n                    .filter(x => {\r\n                      return x.DivisionTags.includes(\"Defender\");\r\n                    })\r\n                    .map(this.makeButton)}\r\n                </div>\r\n              </TabPanel>\r\n            </Tabs>\r\n          </div>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DivisionsSelector;\r\n","import React, { Component } from \"react\";\r\n\r\nclass RandomizePanel extends Component {\r\n  makeButton = (x, i) => {\r\n    let css = \"btn\";\r\n    if (this.props.RandomizerDecks.filter(e => e === x).length > 0) {\r\n      css += \" btn-success\";\r\n    }\r\n    let img = \"img/d/\" + x.EmblemTexture.toLowerCase() + \".tgv.png\";\r\n    return (\r\n      <div className=\"col-xl-3\" key={i}>\r\n        <button\r\n          className={css}\r\n          onClick={e => this.props.f.toggleRandomizer(x, e)}\r\n        >\r\n          <img src={img} className=\"img-back\" alt=\"unitPortrait\" />\r\n        </button>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  makeDeck = () => {\r\n    if (this.props.RandomizerDecks.length === 0) {\r\n      //empty\r\n    } else {\r\n      this.props.f.autofill(\r\n        this.props.RandomizerDecks[\r\n          Math.floor(Math.random() * this.props.RandomizerDecks.length)\r\n        ]\r\n      );\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"row\">\r\n          <div className=\"col-xl\">\r\n            <button\r\n              className=\"btn btn-default btn-block\"\r\n              onClick={e => this.props.f.toggleRandomizer(\"Allied\", e)}\r\n            >\r\n              Allies\r\n            </button>\r\n          </div>\r\n          <div className=\"col-xl\">\r\n            <button\r\n              className=\"btn btn-default btn-block\"\r\n              onClick={e => this.props.f.toggleRandomizer(\"Axis\", e)}\r\n            >\r\n              Axis\r\n            </button>\r\n          </div>\r\n        </div>\r\n        <div className=\"row card-body\">\r\n          <div className=\"col-xl\">\r\n            <div className=\"row\">\r\n              {this.props.DB.filter(x => {\r\n                return x.DivisionNationalite === \"Allied\";\r\n              })\r\n                .filter(x => {\r\n                  return x.DivisionTags.includes(\"DEFAULT\");\r\n                })\r\n                .map(this.makeButton)}\r\n            </div>\r\n          </div>\r\n          <div className=\"col-xl\">\r\n            <div className=\"row\">\r\n              {this.props.DB.filter(x => {\r\n                return x.DivisionNationalite === \"Axis\";\r\n              })\r\n                .filter(x => {\r\n                  return x.DivisionTags.includes(\"DEFAULT\");\r\n                })\r\n                .map(this.makeButton)}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"row\">\r\n          <div className=\"col-xl\">\r\n            <button\r\n              className=\"btn btn-default btn-block\"\r\n              onClick={this.makeDeck}\r\n            >\r\n              Generate\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default RandomizePanel;\r\n","import React, { Component } from \"react\";\r\nimport { Tab, Tabs, TabList, TabPanel } from \"react-tabs\";\r\nimport DeckGrid from \"./DeckGrid\";\r\nimport UnitPicker from \"./UnitPicker\";\r\nimport \"react-tabs/style/react-tabs.css\";\r\nimport DivisionsSelector from \"./DivisionsSelector\";\r\nimport RandomizePanel from \"./RandomizePanel\";\r\n\r\nclass LeftPanel extends Component {\r\n  render() {\r\n    return (\r\n      //unfortunately, all Tabs components\r\n      // have to be returned as a single piece,\r\n      //so, no modularity there\r\n      <React.Fragment>\r\n        <Tabs className=\"card\">\r\n          <TabList>\r\n            <Tab>Division</Tab>\r\n            <Tab>Deck</Tab>\r\n            <Tab>Recon</Tab>\r\n            <Tab>Infantry</Tab>\r\n            <Tab>Tanks</Tab>\r\n            <Tab>Support</Tab>\r\n            <Tab>Anti-Tank</Tab>\r\n            <Tab>Anti-Air</Tab>\r\n            <Tab>Artillery</Tab>\r\n            <Tab>Planes</Tab>\r\n            <Tab>Randomizer</Tab>\r\n          </TabList>\r\n\r\n          <TabPanel>\r\n            <DivisionsSelector\r\n              DB={this.props.Honey.DB}\r\n              Deck={this.props.Honey.DeckBuilder.Deck}\r\n              fset={this.props.Honey.DeckBuilder.API.setDeck}\r\n            />\r\n          </TabPanel>\r\n          <TabPanel>\r\n            <DeckGrid\r\n              DB={this.props.Honey.DB}\r\n              DeckUnits={this.props.Honey.DeckBuilder.DeckUnits}\r\n              f={this.props.Honey.DeckBuilder.API}\r\n            />\r\n          </TabPanel>\r\n          <TabPanel>\r\n            <UnitPicker\r\n              DB={this.props.Honey.DB}\r\n              DeckUnits={this.props.Honey.DeckBuilder.DeckUnits[0]}\r\n              DBUnits={this.props.Honey.DeckBuilder.DBUnits[0]}\r\n              f={this.props.Honey.DeckBuilder.API}\r\n              header={\"Recon\"}\r\n            />\r\n          </TabPanel>\r\n          <TabPanel>\r\n            <UnitPicker\r\n              DB={this.props.Honey.DB}\r\n              DeckUnits={this.props.Honey.DeckBuilder.DeckUnits[1]}\r\n              DBUnits={this.props.Honey.DeckBuilder.DBUnits[1]}\r\n              f={this.props.Honey.DeckBuilder.API}\r\n              header={\"Infantry\"}\r\n            />\r\n          </TabPanel>\r\n          <TabPanel>\r\n            <UnitPicker\r\n              DB={this.props.Honey.DB}\r\n              DeckUnits={this.props.Honey.DeckBuilder.DeckUnits[2]}\r\n              DBUnits={this.props.Honey.DeckBuilder.DBUnits[2]}\r\n              f={this.props.Honey.DeckBuilder.API}\r\n              header={\"Tanks\"}\r\n            />\r\n          </TabPanel>\r\n          <TabPanel>\r\n            <UnitPicker\r\n              DB={this.props.Honey.DB}\r\n              DeckUnits={this.props.Honey.DeckBuilder.DeckUnits[3]}\r\n              DBUnits={this.props.Honey.DeckBuilder.DBUnits[3]}\r\n              f={this.props.Honey.DeckBuilder.API}\r\n              header={\"Support\"}\r\n            />\r\n          </TabPanel>\r\n          <TabPanel>\r\n            <UnitPicker\r\n              DB={this.props.Honey.DB}\r\n              DeckUnits={this.props.Honey.DeckBuilder.DeckUnits[4]}\r\n              DBUnits={this.props.Honey.DeckBuilder.DBUnits[4]}\r\n              f={this.props.Honey.DeckBuilder.API}\r\n              header={\"Anti-Tank\"}\r\n            />\r\n          </TabPanel>\r\n          <TabPanel>\r\n            <UnitPicker\r\n              DB={this.props.Honey.DB}\r\n              DeckUnits={this.props.Honey.DeckBuilder.DeckUnits[5]}\r\n              DBUnits={this.props.Honey.DeckBuilder.DBUnits[5]}\r\n              f={this.props.Honey.DeckBuilder.API}\r\n              header={\"Anti-Air\"}\r\n            />\r\n          </TabPanel>\r\n          <TabPanel>\r\n            <UnitPicker\r\n              DB={this.props.Honey.DB}\r\n              DeckUnits={this.props.Honey.DeckBuilder.DeckUnits[6]}\r\n              DBUnits={this.props.Honey.DeckBuilder.DBUnits[6]}\r\n              f={this.props.Honey.DeckBuilder.API}\r\n              header={\"Artillery\"}\r\n            />\r\n          </TabPanel>\r\n          <TabPanel>\r\n            <UnitPicker\r\n              DB={this.props.Honey.DB}\r\n              DeckUnits={this.props.Honey.DeckBuilder.DeckUnits[7]}\r\n              DBUnits={this.props.Honey.DeckBuilder.DBUnits[7]}\r\n              f={this.props.Honey.DeckBuilder.API}\r\n              header={\"Planes\"}\r\n            />\r\n          </TabPanel>\r\n          <TabPanel>\r\n            <RandomizePanel\r\n              DB={this.props.Honey.DB}\r\n              RandomizerDecks={this.props.Honey.DeckBuilder.RandomizerDecks}\r\n              f={this.props.Honey.DeckBuilder.API}\r\n            />\r\n          </TabPanel>\r\n        </Tabs>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LeftPanel;\r\n","import React, { PureComponent } from \"react\";\r\nimport DeckCodeParser from \"./DeckCodeParser\";\r\nimport RightPanel from \"../DeckBuilderRight/RightPanel\";\r\nimport LeftPanel from \"../DeckBuilderLeft/LeftPanel\";\r\n\r\nclass DeckBuilder extends PureComponent {\r\n  state = {};\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"card\">\r\n          <DeckCodeParser Honey={this.props.Honey} />\r\n        </div>\r\n        <div className=\"row\">\r\n          <div className=\"col-xl-7\">\r\n            <LeftPanel Honey={this.props.Honey} />\r\n          </div>\r\n          <div className=\"col-xl-5\">\r\n            <RightPanel Honey={this.props.Honey} />\r\n          </div>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DeckBuilder;\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  parseGameMode,\r\n  parseVictoryCond,\r\n  parseMap,\r\n  parseTimeLimit,\r\n  parseIncomeRate,\r\n  parseGameType\r\n} from \"./js/ReplayParsers\";\r\n\r\nclass UploadDialog extends Component {\r\n  state = { Replay: null, replayFile: null, desc: \"Description\" };\r\n\r\n  parseReplay = (x, f) => {\r\n    let HeaderStart = x.indexOf('\"game\"');\r\n    let HeaderEnd = x.indexOf(\"}}star\");\r\n    let header = x.slice(HeaderStart, HeaderEnd);\r\n    header = JSON.parse(\"{\" + header + \"}}\"); //to valid JSON\r\n    //game, ...player\r\n\r\n    let headerArr = [];\r\n    for (var key in header) {\r\n      if (header.hasOwnProperty(key)) {\r\n        headerArr.push(header[key]);\r\n      }\r\n    }\r\n    let Game = [];\r\n    let Players = [];\r\n    for (let i = 0; i < headerArr.length; i++) {\r\n      if (i === 0) {\r\n        Game = headerArr[i];\r\n      } else {\r\n        Players.push(headerArr[i]);\r\n      }\r\n    }\r\n\r\n    let FooterStart = x.indexOf('\"result\"');\r\n    let FooterEnd = x.length - 1;\r\n    let footer = x.slice(FooterStart, FooterEnd);\r\n    footer = JSON.parse(\r\n      footer.slice(footer.indexOf(\":\") + 1) //remove title\r\n    ); //duration, score, victory\r\n\r\n    let Replay = {};\r\n    Replay.VictoryCond = Game.VictoryCond;\r\n    Replay.TimeLimit = Game.TimeLimit;\r\n    Replay.ScoreLimit = Game.ScoreLimit;\r\n    Replay.Map = Game.Map;\r\n    Replay.InitMoney = Game.InitMoney;\r\n    Replay.IncomeRate = Game.IncomeRate;\r\n    Replay.GameType = Game.GameType;\r\n    Replay.GameMode = Game.GameMode;\r\n    Replay.Name = Game.ServerName;\r\n    Replay.gameID = Game.UniqueSessionId;\r\n\r\n    Replay.Players = [];\r\n    Replay.Decks = [];\r\n\r\n    Players.forEach(player => {\r\n      Replay.Decks.push(player.PlayerDeckContent);\r\n      Replay.Players.push(player.PlayerName);\r\n    });\r\n    this.setState({ Replay: Replay, replayFile: f });\r\n  };\r\n\r\n  handleFileSelect = evt => {\r\n    let replayFile = evt.target.files[0];\r\n    let reader = new FileReader();\r\n    reader.onload = () => {\r\n      this.parseReplay(reader.result, replayFile);\r\n    };\r\n    reader.readAsText(replayFile);\r\n  };\r\n\r\n  handleChangeName = event => {\r\n    let x = this.state.Replay;\r\n    x.Name = event.target.value;\r\n    this.setState({\r\n      Replay: x\r\n    });\r\n  };\r\n\r\n  handleChangeDescription = event => {\r\n    let x = this.state.Replay;\r\n    x.Description = event.target.value;\r\n    this.setState({\r\n      Replay: x,\r\n      desc: x.Description\r\n    });\r\n  };\r\n\r\n  render() {\r\n    if (this.state.Replay === null) {\r\n      return (\r\n        <input id=\"replayFile\" type=\"file\" onChange={this.handleFileSelect} />\r\n      );\r\n    } else if (this.props.IsUploading) {\r\n      return (\r\n        <div className=\"card\">\r\n          <div className=\"mx-auto\">\r\n            <div className=\"lds-dual-ring\" />\r\n          </div>\r\n        </div>\r\n      );\r\n    } else {\r\n      return (\r\n        <React.Fragment>\r\n          <input id=\"replayFile\" type=\"file\" onChange={this.handleFileSelect} />\r\n          <div className=\"row\">\r\n            <div className=\"col-md-3\">\r\n              <h5>Name</h5>\r\n            </div>\r\n            <div className=\"col-md-9\">\r\n              <input\r\n                className=\"form-control\"\r\n                value={this.state.Replay.Name}\r\n                type=\"text\"\r\n                onChange={this.handleChangeName}\r\n              />\r\n            </div>\r\n            <div className=\"col-md-3\">\r\n              <h5>Description</h5>\r\n            </div>\r\n            <div className=\"col-md-9\">\r\n              <input\r\n                className=\"form-control\"\r\n                value={this.state.desc}\r\n                type=\"text\"\r\n                onChange={this.handleChangeDescription}\r\n              />\r\n            </div>\r\n            <div className=\"col-md-12\">\r\n              <h5>Players:</h5>\r\n            </div>\r\n            {this.state.Replay.Players.map((x, i) => {\r\n              return (\r\n                <div className=\"col-md-3\" key={i}>\r\n                  <h5>{x + \", \"}</h5>\r\n                </div>\r\n              );\r\n            })}\r\n            <div className=\"col-md-2\">\r\n              <h5>\r\n                {\"Victory: \" + parseVictoryCond(this.state.Replay.VictoryCond)}\r\n              </h5>\r\n            </div>\r\n            <div className=\"col-md-3\">\r\n              <h5>\r\n                {\"TimeLimit: \" + parseTimeLimit(this.state.Replay.TimeLimit)}\r\n              </h5>\r\n            </div>\r\n            <div className=\"col-md-3\">\r\n              <h5>{\"ScoreLimit: \" + this.state.Replay.ScoreLimit}</h5>\r\n            </div>\r\n            <div className=\"col-md-3\">\r\n              <h5>{\"InitMoney: \" + this.state.Replay.InitMoney}</h5>\r\n            </div>\r\n            <div className=\"col-md-4\">\r\n              <h5>{\"Map: \" + parseMap(this.state.Replay.Map)}</h5>\r\n            </div>\r\n            <div className=\"col-md-2\">\r\n              <h5>\r\n                {\"IncomeRate: \" + parseIncomeRate(this.state.Replay.IncomeRate)}\r\n              </h5>\r\n            </div>\r\n            <div className=\"col-md-2\">\r\n              <h5>\r\n                {\"GameType: \" + parseGameType(this.state.Replay.GameType)}\r\n              </h5>\r\n            </div>\r\n            <div className=\"col-md-2\">\r\n              <h5>\r\n                {\"GameMode: \" + parseGameMode(this.state.Replay.GameMode)}\r\n              </h5>\r\n            </div>\r\n\r\n            <div\r\n              className=\"btn btn-block btn-primary\"\r\n              onClick={() => {\r\n                this.props.upload(this.state.Replay, this.state.replayFile);\r\n              }}\r\n            >\r\n              Upload\r\n            </div>\r\n          </div>\r\n        </React.Fragment>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nexport default UploadDialog;\r\n","import DeckAssembly from \"./DeckAssembly\";\r\n\r\nexport function setDeck(deck) {\r\n  //sets the division. for full deck, use \"decode\"\r\n  //check if the division data is loaded yet\r\n  let dataarray = this.state.DB;\r\n  let index = dataarray.findIndex(e => e.Descriptor === deck.Descriptor);\r\n  if (index === -1) {\r\n    console.error(\"no such deck descriptor\");\r\n  } else {\r\n    if (typeof dataarray[index].MaxActivationPoints !== \"undefined\") {\r\n      //the division is already loaded\r\n      let deckbuilder = this.state.DeckBuilder;\r\n\r\n      let newDeck = deckbuilder.Deck.setDeck(dataarray[index]);\r\n      let newCode = deckbuilder.Deck.ExportCode;\r\n      deckbuilder.DBUnits = sortByCategory(dataarray[index].PackList);\r\n      deckbuilder.DeckUnits = sortByCategoryForDisplay(newDeck);\r\n      deckbuilder.Deck = newDeck;\r\n      this.setState({ DeckBuilder: deckbuilder, code: newCode });\r\n    } else {\r\n      this.setState({ isLoading: true });\r\n      this.state.Firebase.doc(deck.Descriptor)\r\n        .get()\r\n        .then(queryDocumentSnapshot => {\r\n          dataarray[index] = queryDocumentSnapshot.data(); //load actual deck\r\n\r\n          let deckbuilder = this.state.DeckBuilder;\r\n          let newDeck = deckbuilder.Deck.setDeck(dataarray[index]);\r\n          let newCode = deckbuilder.Deck.ExportCode;\r\n\r\n          deckbuilder.DBUnits = sortByCategory(dataarray[index].PackList);\r\n          deckbuilder.DeckUnits = sortByCategoryForDisplay(newDeck);\r\n          deckbuilder.Deck = newDeck;\r\n\r\n          this.setState({\r\n            isLoading: false,\r\n            DeckBuilder: deckbuilder,\r\n            code: newCode,\r\n            DB: dataarray\r\n          });\r\n        });\r\n    }\r\n  }\r\n}\r\n\r\nfunction sortByCategoryForDisplay(deck) {\r\n  let x = sortByCategory(deck.Cards);\r\n  for (let i = 0; i < 8; i++) {\r\n    // interpolate with CostMatrix for display\r\n    while (x[i].length < 10 && deck.CostMatrix[i].length >= x[i].length) {\r\n      x[i].push(deck.CostMatrix[i][x[i].length]);\r\n    }\r\n  }\r\n  return x;\r\n}\r\n\r\nfunction sortByCategory(units) {\r\n  let x = [[], [], [], [], [], [], [], []];\r\n  for (let i = 0; i < units.length; i++) {\r\n    switch (units[i].Factory) {\r\n      case \"Reco\":\r\n        x[0].push(units[i]);\r\n        break;\r\n      case \"Infanterie\":\r\n        x[1].push(units[i]);\r\n        break;\r\n      case \"Tank\":\r\n        x[2].push(units[i]);\r\n        break;\r\n      case \"Support\":\r\n        x[3].push(units[i]);\r\n        break;\r\n      case \"AT\":\r\n        x[4].push(units[i]);\r\n        break;\r\n      case \"DCA\":\r\n        x[5].push(units[i]);\r\n        break;\r\n      case \"Art\":\r\n        x[6].push(units[i]);\r\n        break;\r\n      case \"Air\":\r\n        x[7].push(units[i]);\r\n        break;\r\n      default: {\r\n        console.error(\"UnitParseError: \" + units[i].Factory);\r\n      }\r\n    }\r\n  }\r\n  return x; //returns nested array of units, by category\r\n}\r\n\r\nexport function addUnit(x) {\r\n  let state = this.state.DeckBuilder;\r\n  let newDeck = state.Deck;\r\n  if (newDeck.PackList.filter(e => e === x).length > 0) {\r\n    newDeck = newDeck.addUnit(x);\r\n    let newCode = newDeck.ExportCode;\r\n    state.DeckUnits = sortByCategoryForDisplay(newDeck);\r\n    state.Deck = newDeck;\r\n    this.setState({ DeckBuilder: state, code: newCode });\r\n  }\r\n}\r\nexport function deleteUnit(x) {\r\n  let state = this.state.DeckBuilder;\r\n  let newDeck = state.Deck.deleteUnit(x);\r\n  let newCode = newDeck.ExportCode;\r\n  state.DeckUnits = sortByCategoryForDisplay(newDeck);\r\n  state.Deck = newDeck;\r\n  this.setState({ DeckBuilder: state, code: newCode });\r\n}\r\n\r\nexport function showUnit(x) {\r\n  let newstr = this.state.DeckBuilder.UnitsToDisplay;\r\n  if (newstr.filter(e => e.EncodeInt === x.EncodeInt).length === 0) {\r\n    newstr.push(x);\r\n    let state = this.state.DeckBuilder;\r\n    state.UnitsToDisplay = newstr;\r\n    this.setState({ DeckBuilder: state });\r\n  }\r\n}\r\n\r\nexport function hideUnit(x) {\r\n  let newstr = this.state.DeckBuilder.UnitsToDisplay;\r\n  newstr.splice(newstr.indexOf(x), 1);\r\n  let state = this.state.DeckBuilder;\r\n  state.UnitsToDisplay = newstr;\r\n  this.setState({ DeckBuilder: state });\r\n}\r\n\r\nexport function sortBy(u, x) {\r\n  console.log(\"sortby\"); //debug, to check if it's even called\r\n  let state = this.state.DeckBuilder;\r\n  let newArray = state.DBUnits;\r\n  if (u === 0) {\r\n    for (let i = 0; i < newArray.length; i++) {\r\n      newArray[i].sort(function(a, b) {\r\n        return a[x] > b[x] ? 1 : b[x] > a[x] ? -1 : 0;\r\n      });\r\n    }\r\n  } else if (u === 1) {\r\n    for (let i = 0; i < newArray.length; i++) {\r\n      newArray[i].sort(function(a, b) {\r\n        return a.Unit[x] > b.Unit[x] ? 1 : b.Unit[x] > a.Unit[x] ? -1 : 0;\r\n      });\r\n    }\r\n  } else if (u === 2) {\r\n    for (let i = 0; i < newArray.length; i++) {\r\n      newArray[i].sort(function(a, b) {\r\n        if (a.TransportUnit === null) return 0;\r\n        if (b.TransportUnit === null) return 1;\r\n        return a.TransportUnit[x] > b.TransportUnit[x]\r\n          ? 1\r\n          : b.TransportUnit[x] > a.TransportUnit[x]\r\n          ? -1\r\n          : 0;\r\n      });\r\n    }\r\n  }\r\n  state.DBUnits = newArray;\r\n  this.setState({ DeckBuilder: state });\r\n}\r\n\r\nexport function setDeckCode(x) {\r\n  this.setState({ code: x });\r\n}\r\n\r\nexport function parseDeckCode(x) {\r\n  let deckbuilder = this.state.DeckBuilder;\r\n  let newDeck = new DeckAssembly();\r\n  let dataarray = this.state.DB;\r\n\r\n  //check if deck loaded into DB\r\n  let deckID = newDeck.getEncodeID(x);\r\n  let index = dataarray.findIndex(e => e.EncodeInt === deckID);\r\n\r\n  if (index === -1) {\r\n    console.error(\"no such deck\");\r\n  } else {\r\n    if (typeof dataarray[index].MaxActivationPoints !== \"undefined\") {\r\n      newDeck = newDeck.decodeDeck(x, this.state.DB);\r\n      let newCode = newDeck.ExportCode;\r\n      deckbuilder.DBUnits = sortByCategory(newDeck.PackList);\r\n      deckbuilder.DeckUnits = sortByCategoryForDisplay(newDeck);\r\n      deckbuilder.Deck = newDeck;\r\n\r\n      this.setState({\r\n        DeckBuilder: deckbuilder,\r\n        code: newCode\r\n      });\r\n    } else {\r\n      this.setState({ isLoading: true });\r\n\r\n      this.state.Firebase.doc(dataarray[index].Descriptor)\r\n        .get()\r\n        .then(queryDocumentSnapshot => {\r\n          dataarray[index] = queryDocumentSnapshot.data();\r\n\r\n          newDeck = newDeck.decodeDeck(x, this.state.DB);\r\n          let newCode = newDeck.ExportCode;\r\n          deckbuilder.DBUnits = sortByCategory(newDeck.PackList);\r\n          deckbuilder.DeckUnits = sortByCategoryForDisplay(newDeck);\r\n          deckbuilder.Deck = newDeck;\r\n\r\n          this.setState({\r\n            DB: dataarray,\r\n            DeckBuilder: deckbuilder,\r\n            isLoading: false,\r\n            code: newCode\r\n          });\r\n        });\r\n    }\r\n  }\r\n}\r\n\r\nexport function isValid(x) {\r\n  if (\r\n    this.state.DeckBuilder.Deck.PackList.filter(\r\n      e => e.Descriptor === x.Descriptor\r\n    ).length > 0 &&\r\n    this.state.DeckBuilder.Deck.Cards.filter(e => e.Descriptor === x.Descriptor)\r\n      .length <= x.PackAvailabilty\r\n  ) {\r\n    return true;\r\n  }\r\n  return false;\r\n}\r\n\r\nexport function getUsedCount(x) {\r\n  return this.state.DeckBuilder.Deck.Cards.filter(\r\n    e => e.Descriptor === x.Descriptor\r\n  ).length;\r\n}\r\n\r\nexport function toggleRandomizer(x) {\r\n  let newState = this.state.DB.filter(\r\n    e => e.Descriptor.indexOf(\"SCENARIO\") === -1\r\n  ); //remove scenario decks\r\n\r\n  if (x === \"Allied\" || x === \"Axis\") {\r\n    newState = newState.filter(e => e.DivisionNationalite === x);\r\n  } else {\r\n    newState = this.state.DeckBuilder.RandomizerDecks;\r\n    if (newState.filter(e => e === x).length > 0) {\r\n      newState.splice(newState.indexOf(x), 1);\r\n    } else {\r\n      newState.push(x);\r\n    }\r\n  }\r\n  let deckb = this.state.DeckBuilder;\r\n  deckb.RandomizerDecks = newState;\r\n  this.setState({ DeckBuilder: deckb });\r\n}\r\n","import DeckAssembly from \"./DeckAssembly\";\r\n\r\nexport function deckListFilter(x) {\r\n  let deckdb = this.state.DeckDB;\r\n  deckdb.sortby = x;\r\n  this.setState({ DeckDB: deckdb });\r\n  this.loadDecks(x);\r\n}\r\nexport function deckListVote(x) {\r\n  if (this.props.Honey.User === null) {\r\n    return;\r\n  }\r\n  if (x.Score.includes(this.props.Honey.User.uid)) {\r\n    var index = x.Score.indexOf(this.props.Honey.User.uid);\r\n    if (index > -1) {\r\n      x.Score.splice(index, 1);\r\n    }\r\n    x.ScoreCount--;\r\n  } else {\r\n    x.Score.push(this.props.Honey.User.uid);\r\n    x.ScoreCount++;\r\n  }\r\n  this.props.Honey.Firebase.collection(\"SubmittedDecks\")\r\n    .doc(x.ID)\r\n    .update({ Score: x.Score, ScoreCount: x.ScoreCount });\r\n  //triggers another data load. should circumvent, maybe\r\n  this.loadDecks(this.state.DeckDB.sortby);\r\n}\r\nexport function deckListGet(x) {\r\n  let newDeckCode;\r\n  if (x === null) {\r\n    //an empty arg is functionally a \"pull from deck builder\"\r\n    newDeckCode = this.state.code;\r\n    //set blank object, to fill later\r\n    x = {\r\n      Name: \"untitled\",\r\n      Division: this.state.DeckBuilder.Deck.Emblem,\r\n      Description: \"\",\r\n      Side: this.state.DeckBuilder.Deck.DivisionNationalite,\r\n      Author: \"\", //if not logged in, will be added before upload\r\n      UID: \"\",\r\n      Score: [],\r\n      ScoreCount: 0,\r\n      code: this.state.DeckBuilder.Deck.ExportCode\r\n    };\r\n  } else {\r\n    newDeckCode = x.code;\r\n  }\r\n\r\n  //deck decoding\r\n  let deckdb = this.state.DeckDB;\r\n  let newDeck = new DeckAssembly();\r\n  let dataarray = this.state.DB;\r\n\r\n  //check if deck loaded into DB\r\n  let deckID = newDeck.getEncodeID(newDeckCode);\r\n  let index = dataarray.findIndex(e => e.EncodeInt === deckID);\r\n\r\n  if (index === -1) {\r\n    console.error(\"no such deck\");\r\n  } else {\r\n    if (typeof dataarray[index].MaxActivationPoints !== \"undefined\") {\r\n      newDeck.decodeDeck(newDeckCode, this.state.DB);\r\n      let newCode = newDeck.ExportCode;\r\n      deckdb.SelectedDeck = newDeck;\r\n      deckdb.SelectedDeckCode = newCode;\r\n      deckdb.SelectedDeckObject = x;\r\n      deckdb.DeckUnits = sortByCategoryForDisplay(newDeck);\r\n      this.setState({ DeckDB: deckdb });\r\n    } else {\r\n      this.setState({ isLoading: true });\r\n      this.state.Firebase.doc(dataarray[index].Descriptor)\r\n        .get()\r\n        .then(queryDocumentSnapshot => {\r\n          dataarray[index] = queryDocumentSnapshot.data();\r\n          newDeck.decodeDeck(newDeckCode, this.state.DB);\r\n          let newCode = newDeck.ExportCode;\r\n          deckdb.SelectedDeck = newDeck;\r\n          deckdb.SelectedDeckCode = newCode;\r\n          deckdb.SelectedDeckObject = x;\r\n          deckdb.DeckUnits = sortByCategoryForDisplay(newDeck);\r\n          this.setState({\r\n            DB: dataarray,\r\n            DeckDB: deckdb,\r\n            isLoading: false\r\n          });\r\n        });\r\n    }\r\n  }\r\n}\r\nexport function deckListSet() {\r\n  this.parseDeckCode(this.state.DeckDB.SelectedDeckCode);\r\n}\r\nexport function deckListEdit(x) {\r\n  let deckdb = this.state.DeckDB;\r\n  deckdb.SelectedDeckObject.Name = x.Name;\r\n  deckdb.SelectedDeckObject.Description = x.Description;\r\n  this.setState({ DeckDB: deckdb });\r\n}\r\nexport function deckListDelete(x) {\r\n  this.props.Honey.Firebase.collection(\"SubmittedDecks\")\r\n    .doc(x.ID)\r\n    .delete()\r\n    .then(() => {\r\n      this.loadDecks(this.state.DeckDB.sortby);\r\n    })\r\n    .catch(function(error) {\r\n      console.error(\"Error removing document: \", error);\r\n    });\r\n}\r\nexport function deckListUpload(x) {\r\n  if (this.props.Honey.User !== null) {\r\n    let newDeck = {\r\n      Name: x.Name,\r\n      Description: x.Description,\r\n      Division: this.state.DeckDB.SelectedDeck.Emblem,\r\n      Score: [this.props.Honey.User.uid],\r\n      ScoreCount: 1,\r\n      Side: this.state.DeckDB.SelectedDeck.DivisionNationalite,\r\n      UID: this.props.Honey.User.uid,\r\n      by: x.Author,\r\n      code: this.state.DeckDB.SelectedDeckCode\r\n    };\r\n    this.props.Honey.Firebase.collection(\"SubmittedDecks\")\r\n      .add(newDeck)\r\n      .then(() => {\r\n        this.loadDecks(this.state.DeckDB.sortby);\r\n      })\r\n      .catch(function(error) {\r\n        console.error(\"Error removing document: \", error);\r\n      });\r\n  } else {\r\n    this.props.Honey.PleaseLogIn();\r\n  }\r\n}\r\n\r\nexport function loadDecks(x) {\r\n  if (this.state.DeckDB.sortBy === null) {\r\n    return;\r\n  }\r\n  let DeckList = [];\r\n  //TODO pagination\r\n  let ref = null;\r\n  if (x === \"new\") {\r\n    ref = this.props.Honey.Firebase.collection(\"SubmittedDecks\").orderBy(\r\n      \"Uploaded\",\r\n      \"desc\"\r\n    );\r\n    //.limit(15);\r\n  } else if (x === \"score\") {\r\n    ref = this.props.Honey.Firebase.collection(\"SubmittedDecks\").orderBy(\r\n      \"ScoreCount\",\r\n      \"desc\"\r\n    );\r\n    //.limit(15);\r\n  }\r\n  ref\r\n    .get()\r\n    .then(querySnapshot => {\r\n      querySnapshot.forEach(doc => {\r\n        DeckList.push(doc.data());\r\n        DeckList[DeckList.length - 1].ID = doc.id;\r\n      });\r\n      let deckdb = this.state.DeckDB;\r\n      deckdb.FullDeckList = DeckList;\r\n      deckdb.DeckList = DeckList;\r\n      this.setState({ DeckDB: deckdb });\r\n    })\r\n    .catch(function(error) {\r\n      console.error(\"Get error: \", error);\r\n    });\r\n}\r\n\r\nfunction sortByCategoryForDisplay(deck) {\r\n  let x = sortByCategory(deck.Cards);\r\n  for (let i = 0; i < 8; i++) {\r\n    // interpolate with CostMatrix for display\r\n    while (x[i].length < 10 && deck.CostMatrix[i].length >= x[i].length) {\r\n      x[i].push(deck.CostMatrix[i][x[i].length]);\r\n    }\r\n  }\r\n  return x;\r\n}\r\n\r\nfunction sortByCategory(units) {\r\n  let x = [[], [], [], [], [], [], [], []];\r\n  for (let i = 0; i < units.length; i++) {\r\n    switch (units[i].Factory) {\r\n      case \"Reco\":\r\n        x[0].push(units[i]);\r\n        break;\r\n      case \"Infanterie\":\r\n        x[1].push(units[i]);\r\n        break;\r\n      case \"Tank\":\r\n        x[2].push(units[i]);\r\n        break;\r\n      case \"Support\":\r\n        x[3].push(units[i]);\r\n        break;\r\n      case \"AT\":\r\n        x[4].push(units[i]);\r\n        break;\r\n      case \"DCA\":\r\n        x[5].push(units[i]);\r\n        break;\r\n      case \"Art\":\r\n        x[6].push(units[i]);\r\n        break;\r\n      case \"Air\":\r\n        x[7].push(units[i]);\r\n        break;\r\n      default: {\r\n        console.error(\"UnitParseError: \" + units[i].Factory);\r\n      }\r\n    }\r\n  }\r\n  return x; //returns nested array of units, by category\r\n}\r\n","import React, { Component } from \"react\";\r\nimport DeckDB from \"./DeckDBComponents/DeckDB\";\r\nimport ReplayDB from \"./ReplayDBComponents/ReplayDB\";\r\nimport DeckBuilder from \"./DeckBuilderComponents/DeckBuilder\";\r\nimport DeckAssembly from \"./js/DeckAssembly\";\r\nimport UploadDialog from \"./UploadDialog\";\r\nimport SkyLight from \"react-skylight\";\r\nimport {\r\n  //separate file, for housekeeping\r\n  setDeck,\r\n  addUnit,\r\n  deleteUnit,\r\n  showUnit,\r\n  isValid,\r\n  getUsedCount,\r\n  sortBy,\r\n  parseDeckCode,\r\n  setDeckCode,\r\n  toggleRandomizer,\r\n  hideUnit\r\n} from \"./js/API\";\r\nimport {\r\n  deckListFilter,\r\n  deckListVote,\r\n  deckListGet,\r\n  deckListSet,\r\n  deckListEdit,\r\n  deckListDelete,\r\n  deckListUpload,\r\n  loadDecks\r\n} from \"./js/DBAPI\";\r\nimport {\r\n  replayFilter,\r\n  replayVote,\r\n  replayGet,\r\n  ReplayDeckSet,\r\n  replayDelete,\r\n  replayShowUpload,\r\n  replayUpload,\r\n  loadReplays\r\n} from \"./js/RPAPI.js\";\r\n\r\nclass SD1 extends Component {\r\n  constructor() {\r\n    super();\r\n\r\n    //binding helper functions to use setState, purely to save space.\r\n    this.setDeck = setDeck.bind(this);\r\n    this.addUnit = addUnit.bind(this);\r\n    this.deleteUnit = deleteUnit.bind(this);\r\n    this.showUnit = showUnit.bind(this);\r\n    this.hideUnit = hideUnit.bind(this);\r\n    this.sortBy = sortBy.bind(this);\r\n    this.isValid = isValid.bind(this);\r\n    this.getUsedCount = getUsedCount.bind(this);\r\n    this.toggleRandomizer = toggleRandomizer.bind(this);\r\n\r\n    this.setDeckCode = setDeckCode.bind(this);\r\n    this.parseDeckCode = parseDeckCode.bind(this);\r\n\r\n    this.deckListFilter = deckListFilter.bind(this);\r\n    this.deckListVote = deckListVote.bind(this);\r\n    this.deckListGet = deckListGet.bind(this);\r\n    this.deckListSet = deckListSet.bind(this);\r\n    this.deckListEdit = deckListEdit.bind(this);\r\n    this.deckListDelete = deckListDelete.bind(this);\r\n    this.deckListUpload = deckListUpload.bind(this);\r\n\r\n    this.loadDecks = loadDecks.bind(this);\r\n\r\n    this.replayFilter = replayFilter.bind(this);\r\n    this.replayVote = replayVote.bind(this);\r\n    this.replayGet = replayGet.bind(this);\r\n    this.ReplayDeckSet = ReplayDeckSet.bind(this);\r\n    this.replayDelete = replayDelete.bind(this);\r\n    this.replayShowUpload = replayShowUpload.bind(this);\r\n    this.replayUpload = replayUpload.bind(this);\r\n    this.loadReplays = loadReplays.bind(this);\r\n\r\n    this.state = {\r\n      //UI\r\n      isLoading: true,\r\n      code: \"\", //a null confuses the input form\r\n      API: {\r\n        parseDeckCode: this.parseDeckCode,\r\n        setDeckCode: this.setDeckCode\r\n      },\r\n\r\n      //GameData\r\n      DB: null, //list of decks, full deck loaded as needed (cheaper, faster)\r\n      Firebase: null, //for calling decks\r\n      DeckBuilder: {\r\n        Deck: null,\r\n        UnitsToDisplay: [], //detailed display list\r\n        RandomizerDecks: [], //decks to include in randomization\r\n        DBUnits: [[], [], [], [], [], [], [], []], //valid units, per cat\r\n        DeckUnits: [[], [], [], [], [], [], [], []], //deck units, per cat\r\n        API: {\r\n          setDeck: this.setDeck,\r\n          addUnit: this.addUnit,\r\n          deleteUnit: this.deleteUnit,\r\n          showUnit: this.showUnit,\r\n          hideUnit: this.hideUnit,\r\n          sortBy: this.sortBy,\r\n          isValid: this.isValid,\r\n          getUsedCount: this.getUsedCount,\r\n          toggleRandomizer: this.toggleRandomizer\r\n        }\r\n      },\r\n      DeckDB: {\r\n        FullDeckList: null, //full DB list\r\n        DeckList: null, //DB list, post filter\r\n        FilterParam: null,\r\n        SelectedDeck: null,\r\n        SelectedDeckCode: \"\",\r\n        SelectedDeckObject: null,\r\n        DeckUnits: [[], [], [], [], [], [], [], []],\r\n        sortby: null,\r\n        API: {\r\n          filter: this.deckListFilter,\r\n          vote: this.deckListVote,\r\n          showDeck: this.deckListGet,\r\n          editDeck: this.deckListSet,\r\n          editHeader: this.deckListEdit,\r\n          deleteDeck: this.deckListDelete,\r\n          uploadDeck: this.deckListUpload\r\n        }\r\n      },\r\n      ReplayDB: {\r\n        ReplayList: null,\r\n        sortby: null,\r\n        Replay: null,\r\n        ReplayDecks: null,\r\n        IsUploading: null,\r\n        API: {\r\n          filter: this.replayFilter,\r\n          vote: this.replayVote,\r\n          showReplay: this.replayGet,\r\n          editDeck: this.ReplayDeckSet,\r\n          deleteReplay: this.replayDelete,\r\n          showUpload: this.replayShowUpload,\r\n          upload: this.replayUpload\r\n        }\r\n      }\r\n    };\r\n  }\r\n\r\n  initData = () => {\r\n    this.props.Honey.Firebase.collection(\"SD1\")\r\n      .doc(\"GameData\")\r\n      .collection(\"Decks\")\r\n      .doc(\"DeckList\")\r\n      .get()\r\n      .then(queryDocumentSnapshot => {\r\n        let DeckArray = queryDocumentSnapshot.data().decklist; //get list of decks, lazy load the decks as needed\r\n        let deckbuilder = this.state.DeckBuilder;\r\n        let newdeck = new DeckAssembly();\r\n        deckbuilder.Deck = newdeck;\r\n        let FB = this.props.Honey.Firebase.collection(\"SD1\")\r\n          .doc(\"GameData\")\r\n          .collection(\"Decks\");\r\n        this.setState({\r\n          Firebase: FB,\r\n          DB: DeckArray,\r\n          DeckBuilder: deckbuilder,\r\n          isLoading: false\r\n        }); //switch interface last\r\n      })\r\n      .catch(function(error) {\r\n        console.error(\"Get error: \", error);\r\n      });\r\n  };\r\n\r\n  render() {\r\n    if (this.state.isLoading) {\r\n      if (this.state.DB === null) {\r\n        this.initData();\r\n      }\r\n      return (\r\n        <div className=\"card\">\r\n          <div className=\"mx-auto\">\r\n            <div className=\"lds-dual-ring\" />\r\n          </div>\r\n        </div>\r\n      );\r\n    } else {\r\n      if (this.props.Honey.ActiveTab === \"DeckBuilder\") {\r\n        return <DeckBuilder Honey={this.state} />;\r\n      } else if (this.props.Honey.ActiveTab === \"DeckDB\") {\r\n        return (\r\n          <DeckDB\r\n            DB={this.state.DB}\r\n            deckDB={this.state.DeckDB}\r\n            DeckUnits={this.state.DeckBuilder.DeckUnits}\r\n            User={this.props.Honey.User}\r\n          />\r\n        );\r\n      } else if (this.props.Honey.ActiveTab === \"ReplayDB\") {\r\n        return (\r\n          <React.Fragment>\r\n            <ReplayDB\r\n              DB={this.state.DB}\r\n              ReplayDB={this.state.ReplayDB}\r\n              User={this.props.Honey.User}\r\n              upload={this.state.ReplayDB.API.showUpload}\r\n              filter={this.state.ReplayDB.API.filter}\r\n            />\r\n            <SkyLight\r\n              hideOnOverlayClicked\r\n              ref={ref => (this.uploadDialog = ref)}\r\n              title={\r\n                <UploadDialog\r\n                  upload={this.state.ReplayDB.API.upload}\r\n                  IsUploading={this.state.ReplayDB.IsUploading}\r\n                />\r\n              }\r\n            />\r\n          </React.Fragment>\r\n        );\r\n      } else {\r\n        return null;\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nexport default SD1;\r\n","export function replayFilter(x) {\r\n  let ReplayDB = this.state.ReplayDB;\r\n  ReplayDB.sortby = x;\r\n  this.setState({ ReplayDB: ReplayDB });\r\n  this.loadReplays(x);\r\n}\r\nexport function replayVote(x) {\r\n  if (this.props.Honey.User === null) {\r\n    return;\r\n  }\r\n  if (x.Score.includes(this.props.Honey.User.uid)) {\r\n    var index = x.Score.indexOf(this.props.Honey.User.uid);\r\n    if (index > -1) {\r\n      x.Score.splice(index, 1);\r\n    }\r\n    x.ScoreCount--;\r\n  } else {\r\n    x.Score.push(this.props.Honey.User.uid);\r\n    x.ScoreCount++;\r\n  }\r\n  this.props.Honey.Firebase.collection(\"SubmittedReplays\")\r\n    .doc(x.ID)\r\n    .update({ Score: x.Score, ScoreCount: x.ScoreCount });\r\n  //triggers another data load. should circumvent, maybe\r\n  this.loadReplays(this.state.ReplayDB.sortby);\r\n}\r\nexport function replayGet(x) {\r\n  console.log(\"replayGet\");\r\n  let Arr = [];\r\n  for (let i = 0; i < x.Players.length; i++) {\r\n    Arr.push({}); //array init\r\n    Arr[i].Player = x.Players[i];\r\n    Arr[i].Deck = x.Decks[i];\r\n  }\r\n\r\n  let ReplayDB = this.state.ReplayDB;\r\n  ReplayDB.Replay = x;\r\n  ReplayDB.ReplayDecks = Arr;\r\n  this.setState({ ReplayDB: ReplayDB });\r\n}\r\nexport function ReplayDeckSet(x) {\r\n  this.parseDeckCode(x);\r\n}\r\nexport function replayDelete(x) {\r\n  this.props.Honey.Firebase.collection(\"SubmittedReplays\")\r\n    .doc(x.ID)\r\n    .delete()\r\n    .then(() => {\r\n      this.props.Honey.Storage.child(x.ID + \"/\" + x.gameID + \".rpl\")\r\n        .delete()\r\n        .then(() => {\r\n          console.log(\"file deleted\");\r\n          this.loadDecks(this.props.Honey.ReplayDB.sortby);\r\n        })\r\n        .catch(function(error) {\r\n          console.error(\"Error removing document: \", error);\r\n        });\r\n    })\r\n    .catch(function(error) {\r\n      console.error(\"Error removing document: \", error);\r\n    });\r\n}\r\nexport function replayShowUpload() {\r\n  this.uploadDialog.show();\r\n}\r\nexport function replayUpload(r, f) {\r\n  if (this.props.Honey.User !== null) {\r\n    if (r === null || f === null) {\r\n      return;\r\n    } else {\r\n      //set loading text\r\n      let replay = this.state.ReplayDB;\r\n      replay.IsUploading = true;\r\n      this.setState({ ReplayDB: replay });\r\n\r\n      //replay DB entry\r\n      r.UID = this.props.Honey.User.uid;\r\n      r.Score = [this.props.Honey.User.uid];\r\n      r.ScoreCount = 1;\r\n\r\n      let metadata = { type: \"SD1\" };\r\n      let filename = r.gameID + \".rpl3\";\r\n      let replaysRef = this.props.Honey.Firebase.collection(\"SubmittedReplays\");\r\n      //upload\r\n      replaysRef\r\n        .add(r)\r\n        .then(docRef => {\r\n          //document path is DB ID/UUID\r\n          let ID = docRef.id;\r\n          this.props.Honey.Storage.child(ID + \"/\" + filename)\r\n            .put(f, metadata)\r\n            .then(snapshot =>\r\n              snapshot.ref\r\n                .getDownloadURL()\r\n                .then(url => {\r\n                  //set DL URL to DB\r\n                  replaysRef.doc(ID).update({ DL: url });\r\n\r\n                  this.loadReplays(this.state.ReplayDB.sortby);\r\n\r\n                  let replay = this.state.ReplayDB;\r\n                  replay.IsUploading = true;\r\n                  this.setState({ ReplayDB: replay });\r\n                  this.uploadDialog.hide();\r\n                })\r\n                .catch(function(error) {\r\n                  this.props.Honey.ErrorOut();\r\n                  console.error(\"URL error: \", error);\r\n                })\r\n            )\r\n            .catch(function(error) {\r\n              this.uploadDialog.hide();\r\n              this.props.Honey.ErrorOut();\r\n              console.error(\"Error adding replay: \", error);\r\n            });\r\n        })\r\n        .catch(function(error) {\r\n          this.props.Honey.ErrorOut();\r\n          console.error(\"Error adding document: \", error);\r\n        });\r\n    }\r\n  } else {\r\n    this.uploadDialog.hide();\r\n    this.props.Honey.PleaseLogIn();\r\n  }\r\n}\r\n\r\nexport function loadReplays(x) {\r\n  if (this.state.ReplayDB.sortBy === null) {\r\n    return;\r\n  }\r\n  let ReplayList = [];\r\n  //TODO pagination\r\n  let ref = null;\r\n  if (x === \"new\") {\r\n    ref = this.props.Honey.Firebase.collection(\"SubmittedReplays\").orderBy(\r\n      \"Uploaded\",\r\n      \"desc\"\r\n    );\r\n    //.limit(15);\r\n  } else if (x === \"score\") {\r\n    ref = this.props.Honey.Firebase.collection(\"SubmittedReplays\").orderBy(\r\n      \"ScoreCount\",\r\n      \"desc\"\r\n    );\r\n    //.limit(15);\r\n  }\r\n  ref\r\n    .get()\r\n    .then(querySnapshot => {\r\n      querySnapshot.forEach(doc => {\r\n        ReplayList.push(doc.data());\r\n        ReplayList[ReplayList.length - 1].ID = doc.id;\r\n      });\r\n      let ReplayDB = this.state.ReplayDB;\r\n      ReplayDB.ReplayList = ReplayList;\r\n      this.setState({ ReplayDB: ReplayDB });\r\n    })\r\n    .catch(function(error) {\r\n      console.error(\"Get error: \", error);\r\n    });\r\n}\r\n","import React, { PureComponent } from \"react\";\r\n\r\nclass SD2 extends PureComponent {\r\n  render() {\r\n    return <div />;\r\n  }\r\n}\r\n\r\nexport default SD2;\r\n","import React, { Component } from \"react\";\r\nimport firebase from \"../js/Firestore\";\r\nimport Header from \"./Header\";\r\nimport SD1 from \"./SD1/SD1\";\r\nimport SD2 from \"./SD2/SD2\";\r\nimport SkyLight from \"react-skylight\";\r\n\r\n//import dict from \"../Database.json\"; //for dev purposes\r\n//import FirestoreInit from \"../js/FirestoreInit\";\r\nrequire(\"dotenv\").config();\r\n\r\nclass app extends Component {\r\n  constructor() {\r\n    super();\r\n    const db = firebase.firestore();\r\n    const fb = firebase.storage().ref();\r\n\r\n    this.state = {\r\n      //UI\r\n      loadedDB: null, //parsed values: SD1, SD2\r\n      ActiveTab: \"DBloader\", //options: DBloader, DeckBuilder, DeckDB, ReplayDB\r\n\r\n      //firebase and auth data\r\n      User: null,\r\n      Token: null,\r\n      Firebase: db,\r\n      Storage: fb,\r\n\r\n      setActiveTab: this.setActiveTab,\r\n      logIn: this.logIn,\r\n      logout: this.logOut,\r\n      PleaseLogIn: this.PleaseLogInShow,\r\n      ErrorOut: this.Error\r\n    };\r\n  }\r\n\r\n  PleaseLogInShow = () => {\r\n    this.PleaseLogIn.show();\r\n  };\r\n\r\n  loadSD1 = () => {\r\n    this.setState({ loadedDB: \"SD1\", ActiveTab: \"DeckBuilder\" });\r\n  };\r\n\r\n  loadSD2 = () => {\r\n    console.log(\"SD2 DB support not implemented yet\");\r\n    return;\r\n  };\r\n\r\n  setActiveTab = x => {\r\n    this.setState({ ActiveTab: x });\r\n  };\r\n  /** auth **/\r\n  logIn = () => {\r\n    if (this.state.User === null) {\r\n      var provider = new firebase.auth.GoogleAuthProvider();\r\n      firebase\r\n        .auth()\r\n        .signInWithPopup(provider)\r\n        .then(result => {\r\n          this.setState({\r\n            User: result.user,\r\n            Token: result.credential.accessToken, //I don't really use the token, but W/E\r\n            LogInButtonText: \"Logout\"\r\n          });\r\n        })\r\n        .catch(function(error) {\r\n          this.Error();\r\n          console.log(error);\r\n        });\r\n    } else {\r\n      this.logOut();\r\n    }\r\n  };\r\n  logOut = () => {\r\n    firebase\r\n      .auth()\r\n      .signOut()\r\n      .then(() => {\r\n        this.setState({\r\n          User: null,\r\n          Token: null,\r\n          LogInButtonText: \"Login\"\r\n        });\r\n      })\r\n      .catch(function(error) {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  // render app body\r\n  showDBInterface = () => {\r\n    if (this.state.loadedDB === null) {\r\n      return (\r\n        <React.Fragment>\r\n          <div className=\"card\">\r\n            <div className=\"row\">\r\n              <div className=\"col-xl\">\r\n                <button\r\n                  className=\"btn btn-default btn-block\"\r\n                  onClick={this.loadSD1}\r\n                >\r\n                  Steel Division: Normandy 44\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </React.Fragment>\r\n      );\r\n    } else if (this.state.loadedDB === \"SD1\") {\r\n      return <SD1 Honey={this.state} />;\r\n    } else if (this.state.loadedDB === \"SD2\") {\r\n      return <SD2 Honey={this.state} />;\r\n    } else {\r\n      console.log(this.state.loadedDB);\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"card\">\r\n          <Header Honey={this.state} />\r\n        </div>\r\n        <SkyLight hideOnOverlayClicked ref={ref => (this.PleaseLogIn = ref)}>\r\n          Please Log In\r\n        </SkyLight>\r\n        <SkyLight hideOnOverlayClicked ref={ref => (this.Error = ref)}>\r\n          An error has occurred\r\n        </SkyLight>\r\n        {this.showDBInterface()}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default app;\r\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\nimport \"./custom.css\";\r\nimport App from \"./Components/App\";\r\nimport registerServiceWorker from \"./registerServiceWorker\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\nregisterServiceWorker();\r\n"],"sourceRoot":""}